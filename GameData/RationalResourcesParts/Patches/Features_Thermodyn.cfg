@PART[RRConverterThermodynS1]:NEEDS[B9PartSwitch,RationalResources,CommunityResourcePack,!Kerbalism]
{
	RateInEC = 10
	
	// 50 moles per sec per module
	RateInNH3 = 1107.28218
	RateOutNH3 = 1.21279
	RateInCO = 1120.4
	RateOutCO = 1.77278
	RateInCO2 = 1127.88314
	RateOutCO2 = 1.87556
	RateInD = 559.44444
	RateOutD = 0.62007
	RateInH2 = 1123.47052
	RateOutH2 = 1.42555
	RateInCH4 = 1119.38633
	RateOutCH4 = 1.88553
	RateInN2 = 1119.66427
	RateOutN2 = 1.69777
	RateInO2 = 1134.75177
	RateOutO2 = 1.40228
	RateOutOX = 0.32
	
	MODULE
	{
		name = ModuleResourceConverter
		ConverterName = Heater 1
		StartActionName = Start Heater
		StopActionName = Stop Heater
		ToggleActionName = Toggle Heater
		AutoShutdown = true
		GeneratesHeat = false
		 
		INPUT_RESOURCE
		{
			ResourceName = LqdAmmonia
			Ratio = #$/RateOutNH3$
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = #$/RateInEC$
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Ammonia
			Ratio = #$/RateInNH3$
			FlowMode = STAGE_PRIORITY_FLOW
			DumpExcess = false
		}
	}
	MODULE
	{
		name = ModuleB9PartSwitch
		moduleID = RRGasSwitch1
		switcherDescription = Gas
		switcherDescriptionPlural = Gases
		SUBTYPE
		{
			name = Ammonia
			title = Liquid Ammonia
			descriptionSummary = #<b>Inputs</b>: $/RateOutNH3$ LqdAmmonia /s + $/RateInEC$ EC /s.<br><b>Output</b>: $/RateInNH3$ Ammonia /s .
			primaryColor = BurntRed
			secondaryColor = BurntRed
		}
		SUBTYPE
		{
			name = CarbonDioxide
			title = Liquid CarbonDioxide
			descriptionSummary = #<b>Inputs</b>: $/RateOutCO2$ LqdCO2 /s + $/RateInEC$ EC /s.<br><b>Output</b>: $/RateInCO2$ CarbonDioxide/s.
			primaryColor = WarmGrey
			secondaryColor = WarmGrey
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleResourceConverter
					ConverterName = Heater 1
				}
				DATA
				{
					INPUT_RESOURCE
					{
						ResourceName = LqdCO2
						Ratio = #$/RateOutCO2$
						FlowMode = STAGE_PRIORITY_FLOW
					}
					INPUT_RESOURCE
					{
						ResourceName = ElectricCharge
						Ratio = #$/RateInEC$
					}
					OUTPUT_RESOURCE
					{
						ResourceName = CarbonDioxide
						Ratio = #$/RateInCO2$
						FlowMode = STAGE_PRIORITY_FLOW
						DumpExcess = false
					}
				}
			}
		}
		SUBTYPE
		{
			name = CarbonMonoxide
			title = Liquid CarbonMonoxide
			descriptionSummary = #<b>Inputs</b>: $/RateOutCO$ LqdCO /s + $/RateInEC$ EC /s.<br><b>Output</b>: $/RateInCO$ CarbonMonoxide /s.
			primaryColor = PurpleGrey
			secondaryColor = PurpleGrey
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleResourceConverter
					ConverterName = Heater 1
				}
				DATA
				{
					INPUT_RESOURCE
					{
						ResourceName = LqdCO
						Ratio = #$/RateOutCO$
						FlowMode = STAGE_PRIORITY_FLOW
					}
					INPUT_RESOURCE
					{
						ResourceName = ElectricCharge
						Ratio = #$/RateInEC$
					}
					OUTPUT_RESOURCE
					{
						ResourceName = CarbonMonoxide
						Ratio = #$/RateInCO$
						FlowMode = STAGE_PRIORITY_FLOW
						DumpExcess = false
					}
				}
			}
		}
		SUBTYPE
		{
			name = Deuterium
			title = Liquid Deuterium
			descriptionSummary = #<b>Inputs</b>: $/RateOutNH3$ LqdDeuterium /s + $/RateInEC$ EC /s.<br><b>Output</b>: $/RateInNH3$ Deuterium /s.
			primaryColor = PowderBlue
			secondaryColor = PowderBlue
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleResourceConverter
					ConverterName = Heater 1
				}
				DATA
				{
					INPUT_RESOURCE
					{
						ResourceName = LqdDeuterium
						Ratio = #$/RateOutD$
						FlowMode = STAGE_PRIORITY_FLOW
					}
					INPUT_RESOURCE
					{
						ResourceName = ElectricCharge
						Ratio = #$/RateInEC$
					}
					OUTPUT_RESOURCE
					{
						ResourceName = Deuterium
						Ratio = #$/RateInD$
						FlowMode = STAGE_PRIORITY_FLOW
						DumpExcess = false
					}
				}
			}
		}
		SUBTYPE
		{
			name = Hydrogen
			title = Liquid Hydrogen
			descriptionSummary = #<b>Inputs</b>: $/RateOutH2$ LqdHydrogen /s + $/RateInEC$ EC /s.<br><b>Output</b>: $/RateInH2$ Hydrogen /s.
			primaryColor = ResourceColorLqdHydrogen
			secondaryColor = ResourceColorLqdHydrogen
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleResourceConverter
					ConverterName = Heater 1
				}
				DATA
				{
					INPUT_RESOURCE
					{
						ResourceName = LqdHydrogen
						Ratio = #$/RateOutH2$
						FlowMode = STAGE_PRIORITY_FLOW
					}
					INPUT_RESOURCE
					{
						ResourceName = ElectricCharge
						Ratio = #$/RateInEC$
					}
					OUTPUT_RESOURCE
					{
						ResourceName = Hydrogen
						Ratio = #$/RateInH2$
						FlowMode = STAGE_PRIORITY_FLOW
						DumpExcess = false
					}
				}
			}
		}
		SUBTYPE
		{
			name = Methane
			title = Liquid Methane
			descriptionSummary = #<b>Inputs</b>: $/RateOutCH4$ LqdMethane /s + $/RateInEC$ EC /s.<br><b>Output</b>: $/RateInCH4$ Methane /s.
			primaryColor = ResourceColorLqdMethane
			secondaryColor = ResourceColorLqdMethane
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleResourceConverter
					ConverterName = Heater 1
				}
				DATA
				{
					INPUT_RESOURCE
					{
						ResourceName = LqdMethane
						Ratio = #$/RateOutCH4$
						FlowMode = STAGE_PRIORITY_FLOW
					}
					INPUT_RESOURCE
					{
						ResourceName = ElectricCharge
						Ratio = #$/RateInEC$
					}
					OUTPUT_RESOURCE
					{
						ResourceName = Methane
						Ratio = #$/RateInCH4$
						FlowMode = STAGE_PRIORITY_FLOW
						DumpExcess = false
					}
				}
			}
		}
		SUBTYPE
		{
			name = Nitrogen
			title = Liquid Nitrogen
			descriptionSummary = #<b>Inputs</b>: $/RateOutN2$ LqdNitrogen /s + $/RateInEC$ EC /s.<br><b>Output</b>: $/RateInN2$ Nitrogen /s.
			primaryColor = PeacockBlue
			secondaryColor = PeacockBlue
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleResourceConverter
					ConverterName = Heater 1
				}
				DATA
				{
					INPUT_RESOURCE
					{
						ResourceName = LqdNitrogen
						Ratio = #$/RateOutN2$
						FlowMode = STAGE_PRIORITY_FLOW
					}
					INPUT_RESOURCE
					{
						ResourceName = ElectricCharge
						Ratio = #$/RateInEC$
					}
					OUTPUT_RESOURCE
					{
						ResourceName = Nitrogen
						Ratio = #$/RateInN2$
						FlowMode = STAGE_PRIORITY_FLOW
						DumpExcess = false
					}
				}
			}
		}
		SUBTYPE
		{
			name = Oxygen
			title = Liquid Oxygen
			descriptionSummary = #<b>Inputs</b>: $/RateOutO2$ LqdOxygen /s + $/RateInEC$ EC /s.<br><b>Output</b>: $/RateInO2$ Oxygen /s.
			primaryColor = CadetBlue
			secondaryColor = CadetBlue
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleResourceConverter
					ConverterName = Heater 1
				}
				DATA
				{
					INPUT_RESOURCE
					{
						ResourceName = LqdOxygen
						Ratio = #$/RateOutO2$
						FlowMode = STAGE_PRIORITY_FLOW
					}
					INPUT_RESOURCE
					{
						ResourceName = ElectricCharge
						Ratio = #$/RateInEC$
					}
					OUTPUT_RESOURCE
					{
						ResourceName = Oxygen
						Ratio = #$/RateInO2$
						FlowMode = STAGE_PRIORITY_FLOW
						DumpExcess = false
					}
				}
			}
		}
		SUBTYPE
		{
			name = Oxidizer
			title = Oxidizer
			descriptionSummary = #<b>Inputs</b>: $/RateOutO2$ Oxidizer /s + $/RateInEC$ EC /s.<br><b>Output</b>: $/RateInO2$ Oxygen /s.
			primaryColor = ResourceColorOxidizer
			secondaryColor = ResourceColorOxidizer
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleResourceConverter
					ConverterName = Heater 1
				}
				DATA
				{
					INPUT_RESOURCE
					{
						ResourceName = Oxidizer
						Ratio = #$/RateOutOX$
						FlowMode = STAGE_PRIORITY_FLOW
					}
					INPUT_RESOURCE
					{
						ResourceName = ElectricCharge
						Ratio = #$/RateInEC$
					}
					OUTPUT_RESOURCE
					{
						ResourceName = Oxygen
						Ratio = #$/RateInO2$
						FlowMode = STAGE_PRIORITY_FLOW
						DumpExcess = false
					}
				}
			}
		}
	}
	
}

@PART[RRConverterThermodynS1]:NEEDS[B9PartSwitch,RationalResources,CommunityResourcePack,SystemHeatConverters]
{
	@MODULE[ModuleB9PartSwitch],*
	{
		@SUBTYPE,*
		{
			@MODULE
			{
				@IDENTIFIER
				{
					@name = ModuleSystemHeatConverter
				}
			}
		}
	}
}
@PART[RRConverterThermodynS1]:NEEDS[B9PartSwitch,RationalResources,CommunityResourcePack,zKerbalismSystemHeat]
{
	@MODULE[ModuleB9PartSwitch],*
	{
		@SUBTYPE,*
		{
			@MODULE
			{
				@IDENTIFIER
				{
					@name = SystemHeatConverterKerbalism
				}
			}
		}
	}
}

@PART[RRConverterThermodynS1]:AFTER[RationalResources]
{
	!Rate* = nope
}


// @PART[RRConverterThermodynS1]:NEEDS[Pathfinder]
// {
	// MODULE
	// {
		// name = WBIOmniConverter
		// managedName = Heater Bay
		// templateNodes = OMNICONVERTER
		// templateTags = rrth;
		// BaseEfficiency = #$/RRPower$
		// reconfigureSkill = ConverterSkill
		// requiredResource = Equipment
		// requiredAmount = 100
		// @requiredAmount *= #$/RRPower$

		// ConverterName = OmniConverter
		// StartActionName = Start Converter
		// StopActionName = Stop Converter
		// AutoShutdown = False
		// UseSpecialistBonus = True
		// SpecialistEfficiencyFactor = 0.2
		// SpecialistBonusBase = 0.05
		// ExperienceEffect = ConverterSkill
		// EfficiencyBonus = #$/RRPower$

		// showOpsView = True
	// }
// }