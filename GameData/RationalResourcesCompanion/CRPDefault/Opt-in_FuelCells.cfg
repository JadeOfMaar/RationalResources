@PART:HAS[#RRFuelCell[Set]]:NEEDS[CommunityResourcePack,!RationalResourcesOmniConverters,!Kerbalism,!OnDemandFuelCells]:FOR[zRationalResources]
{
	@RRFuelCell = isSet
	@description ^= :$: <br><#4FBBFF>Fuel cell can accept other fuels.</color>
	
	rrInOxidizer = 0.02475
	rrInLiquidFuel = 0.02025 // 0.9:1.1 by u/s with Oxidizer
	rrInLqdMethane = 0.07425 // 3:1 by u/s with Oxidizer
	rrInLqdHydrogen = 0.37125 // 15:1 by u/s | 2.825:1 by moles with Oxidizer
	rrOutputWater = 0.13922
	rrOutputEC = 18
	rrInLqdCO = 0.27225 // 11:1 by u/s | 2:1 by moles with Oxidizer
	rrInOre = 0.45 // derived from SMX Fuel Cell input
	
	// **Roughly matches engine fuel ratio in ValiZockt's RF-Stock patches
	rrInLqdOxygen:NEEDS[RealFuels] = 0.10845 // Equivalent in kg/s with Oxidizer
	rrInKerosene:NEEDS[RealFuels] = 0.06562 // 0.081682:1 by moles with LqdOxygen**
	@rrInLqdHydrogen:NEEDS[RealFuels] = 0.30643 // 2.8255:1 by moles with LqdOxygen**
	@rrInLqdMethane:NEEDS[RealFuels] = 0.06178 // 0.56965:1 by moles with LqdOxygen**
	rrInLqdCO:NEEDS[RealFuels] = 0.31329 // 2.285:1 by moles with LqdOxygen
	
	@rrInOre *= #$RRPower$
	@rrInLiquidFuel *= #$RRPower$
	@rrInOxidizer *= #$RRPower$
	@rrInKerosene *= #$RRPower$
	@rrInLqdCO *= #$RRPower$
	@rrInLqdHydrogen *= #$RRPower$
	@rrInLqdMethane *= #$RRPower$
	@rrInLqdOxygen *= #$RRPower$
	@rrOutputEC *= #$RRPower$
	@rrOutputWater *= #$RRPower$
	
	// Preserve and extend EL rebalance 
	@rrInLiquidFuel:NEEDS[Launchpad] *= 0.2
	@rrInOxidizer:NEEDS[Launchpad] *= 0.2
	@rrInKerosene:NEEDS[Launchpad] *= 0.2
	@rrInLqdCO:NEEDS[Launchpad] *= 0.2
	@rrInLqdHydrogen:NEEDS[Launchpad] *= 0.2
	@rrInLqdMethane:NEEDS[Launchpad] *= 0.2
	@rrInLqdOxygen:NEEDS[Launchpad] *= 0.2
	@rrOutputEC:NEEDS[Launchpad] *= 6
	@rrOutputWater:NEEDS[Launchpad] *= 0.2
	
	
	!MODULE[ModuleResourceConverter]:HAS[~Tag[*]],* {}
	MODULE
	{
		name = ModuleResourceConverter
		ConverterName = RR Fuel Cell
		StartActionName = Start Fuel Cell
		StopActionName = Stop Fuel Cell
		ToggleActionName = Toggle Fuel Cell
		FillAmount = 0.95
		Tag = RR
		AutoShutdown = False
		GeneratesHeat = False
		UseSpecialistBonus = False
		INPUT_RESOURCE
		{
			ResourceName = LiquidFuel
			Ratio = #$/rrInLiquidFuel$
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE
		{
			ResourceName = Oxidizer
			Ratio = #$/rrInOxidizer$
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = #$/rrOutputEC$
			DumpExcess = False
		}
	}
	
	MODULE
	{
		name = ModuleB9PartSwitch
		moduleID = RRFuelCell
		switcherDescription = Fuel 
		switcherDescriptionPlural = Fuel Selections
		switchInFlight = True
	}
	
	%RESOURCE[ElectricCharge]
	{
		%amount = 300
		%maxAmount = 300
		@amount *= #$/RRPower$
		@maxAmount *= #$/RRPower$
	}
}

@PART:HAS[#RRFuelCell[isSet]]:NEEDS[CommunityResourcePack,!RationalResourcesOmniConverters,!Kerbalism,!OnDemandFuelCells]:FOR[zRationalResources]
{
	@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[RRFuelCell]]
	{
		SUBTYPE
		{
			name = LFO
			title = LFO
			primaryColor = ResourceColorLiquidFuel
			secondaryColor = ResourceColorOxidizer
			descriptionSummary = LiquidFuel + Oxidizer
			descriptionDetail = #<b>Inputs = </b> $/rrInLiquidFuel$ LF/s + $/rrInOxidizer$ OX/s.<br><b>Outputs = </b> $/rrOutputEC$ EC/s.<br><color="orange">Please quicksave + quickload after applying.</color>
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleResourceConverter
					ConverterName = RR Fuel Cell
				}
				DATA
				{
					INPUT_RESOURCE
					{
						ResourceName = LiquidFuel
						Ratio = #$/rrInLiquidFuel$
						FlowMode = STAGE_PRIORITY_FLOW
					}
					INPUT_RESOURCE
					{
						ResourceName = Oxidizer
						Ratio = #$/rrInOxidizer$
						FlowMode = STAGE_PRIORITY_FLOW
					}
				}
			}
		}
		SUBTYPE:NEEDS[RealFuels]
		{
			name = Kerolox
			title = Kerolox
			primaryColor = ResourceColorLiquidFuel
			secondaryColor = CadetBlue
			descriptionSummary = LiquidFuel + LqdOxygen
			descriptionDetail = #<b>Inputs = </b> $/rrInKerosene$ Kerosene/s + $/rrInLqdOxygen$ LOX/s.<br><b>Outputs = </b> $/rrOutputEC$ EC/s.<br><color="orange">Please quicksave + quickload after applying.</color>
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleResourceConverter
					ConverterName = RR Fuel Cell
				}
				DATA
				{
					INPUT_RESOURCE
					{
						ResourceName = Kerosene
						Ratio = #$/rrInKerosene$
						FlowMode = STAGE_PRIORITY_FLOW
					}
					INPUT_RESOURCE
					{
						ResourceName = LqdOxygen
						Ratio = #$/rrInLqdOxygen$
						FlowMode = STAGE_PRIORITY_FLOW
					}
				}
			}
		}
		SUBTYPE
		{
			name = Hydrolox
			title = Hydrolox
			primaryColor = ResourceColorLqdHydrogen
			secondaryColor = ResourceColorOxidizer
			descriptionSummary = LqdHydrogen + Oxidizer
			descriptionDetail = #<b>Inputs = </b> $/rrInLqdHydrogen$ LH2/s + $/rrInOxidizer$ OX/s <br><b>Outputs = </b> $/rrOutputEC$ EC/s + $/rrOutputWater$ H2O/s.<br><color="orange">Please quicksave + quickload after applying.</color>
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleResourceConverter
					ConverterName = RR Fuel Cell
				}
				DATA
				{
					INPUT_RESOURCE
					{
						ResourceName = LqdHydrogen
						Ratio = #$/rrInLqdHydrogen$
						FlowMode = STAGE_PRIORITY_FLOW
					}
					INPUT_RESOURCE
					{
						ResourceName = Oxidizer
						Ratio = #$/rrInOxidizer$
						FlowMode = STAGE_PRIORITY_FLOW
					}
					OUTPUT_RESOURCE
					{
						ResourceName = ElectricCharge
						Ratio = #$/rrOutputEC$
						DumpExcess = False
					}
					OUTPUT_RESOURCE
					{
						ResourceName = Water
						Ratio = #$/rrOutputWater$
						DumpExcess = true
					}
				}
			}
		}
		@SUBTYPE[Hydrolox]:NEEDS[RealFuels]
		{
			@secondaryColor = CadetBlue
			@descriptionSummary = LqdHydrogen + LqdOxygen
			@descriptionDetail = #<b>Inputs = </b> $/rrInLqdHydrogen$ LH2/s + $/rrInLqdOxygen$ LOX/s <br><b>Outputs = </b> $/rrOutputEC$ EC/s + $/rrOutputWater$ H2O/s.<br><color="orange">Please quicksave + quickload after applying.</color>
			{
				@DATA
				{
					@INPUT_RESOURCE,1
					{
						@ResourceName = LqdOxygen
						@Ratio = #$/rrInLqdOxygen$
					}
				}
			}
		}
		SUBTYPE
		{
			name = Methalox
			title = Methalox
			primaryColor = FadedGreen
			secondaryColor = ResourceColorOxidizer
			descriptionSummary = LqdMethane + Oxidizer
			descriptionDetail = #<b>Inputs = </b> $/rrInLqdMethane$ LCH4/s + $/rrInOxidizer$ OX/s. <br><b>Outputs = </b> $/rrOutputEC$ EC/s.<br><color="orange">Please quicksave + quickload after applying.</color>
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleResourceConverter
					ConverterName = RR Fuel Cell
				}
				DATA
				{
					INPUT_RESOURCE
					{
						ResourceName = LqdMethane
						Ratio = #$/rrInLqdMethane$
						FlowMode = STAGE_PRIORITY_FLOW
					}
					INPUT_RESOURCE
					{
						ResourceName = Oxidizer
						Ratio = #$/rrInOxidizer$
						FlowMode = STAGE_PRIORITY_FLOW
					}
				}
			}
		}
		@SUBTYPE[Methalox]:NEEDS[RealFuels]
		{
			@secondaryColor = CadetBlue
			@descriptionSummary = LqdMethane + LqdOxygen
			@descriptionDetail = #<b>Inputs = </b> $/rrInLqdMethane$ LCH4/s + $/rrInLqdOxygen$ LOX/s. <br><b>Outputs = </b> 18 EC/s.<br><color="orange">Please quicksave + quickload after applying.</color>
			@MODULE
			{
				@DATA
				{
					@INPUT_RESOURCE,1
					{
						@ResourceName = LqdOxygen
						@Ratio = #$/rrInLqdOxygen$
					}
				}
			}
		}
		SUBTYPE
		{
			name = CarbonM
			title = CarbonMonoxide
			primaryColor = PurpleGrey
			secondaryColor = ResourceColorOxidizer
			descriptionSummary = LqdCO + Oxidizer
			descriptionDetail = #<b>Inputs = </b> $/rrInLqdCO$ LCO/s + $/rrInOxidizer$ OX/s.<br><b>Outputs = </b> $/rrOutputEC$ EC/s.<br><color="orange">Please quicksave + quickload after applying.</color>
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleResourceConverter
					ConverterName = RR Fuel Cell
				}
				DATA
				{
					INPUT_RESOURCE
					{
						ResourceName = LqdCO
						Ratio = #$/rrInLqdCO$
						FlowMode = STAGE_PRIORITY_FLOW
					}
					INPUT_RESOURCE
					{
						ResourceName = Oxidizer
						Ratio = #$/rrInOxidizer$
						FlowMode = STAGE_PRIORITY_FLOW
					}
				}
			}
		}
		@SUBTYPE[Carbon]:NEEDS[RealFuels]
		{
			@secondaryColor = CadetBlue
			@descriptionSummary = LqdCO + LqdOxygen
			@descriptionDetail = #<b>Inputs = </b> $/rrInLqdCO$ LCO/s + $/rrInLqdOxygen$ LOX/s.<br><b>Outputs = </b> $/rrOutputEC$ EC/s.<br><color="orange">Please quicksave + quickload after applying.</color>
			@MODULE
			{
				@DATA
				{
					@INPUT_RESOURCE,1
					{
						@ResourceName = LqdOxygen
						@Ratio = #$/rrInLqdOxygen$
					}
				}
			}
		}
	}
}


@PART:HAS[#RRFuelCell[isSet],#OreBurner[True]]:NEEDS[CommunityResourcePack,!RationalResourcesOmniConverters,!Kerbalism,!OnDemandFuelCells]:FOR[zRationalResources]
{
	@MODULE[ModuleResourceConverter]:HAS[#ConverterName[RR?Fuel?Cell]]
	{
		!INPUT_RESOURCE,* {}
		INPUT_RESOURCE
		{
			ResourceName = Ore
			Ratio = #$/rrInOre$
			FlowMode = STAGE_PRIORITY_FLOW
		}
	}
	
	@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[RRFuelCell]]
	{
		SUBTYPE
		{
			name = Ore
			title = Ore
			primaryColor = ResourceColorOre
			secondaryColor = ResourceColorOre
			defaultSubtypePriority = 2
			descriptionSummary = Ore
			descriptionDetail = #<b>Inputs = </b> $/rrInOre$ Ore/s.<br><b>Outputs = </b> $/rrOutputEC$ EC/s.<br><color="orange">Please quicksave + quickload after applying.</color>
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleResourceConverter
					ConverterName = RR Fuel Cell
				}
				DATA
				{
					INPUT_RESOURCE
					{
						ResourceName = Ore
						Ratio = #$/rrInOre$
						FlowMode = STAGE_PRIORITY_FLOW
					}
				}
			}
		}
	}
}

@PART[restock-apu-radial-1]:NEEDS[CommunityResourcePack,!RationalResourcesOmniConverters,RestockPlus,!Kerbalism,!OnDemandFuelCells]:FOR[zRationalResources]
{
	@description ^= :$: <br><#4FBBFF>Fuel cell can accept other fuels.</color><br><color="yellow">This part uses core heat but needs no radiator.</color>
	@MODULE[ModuleResourceConverter]
	{
		@GeneratesHeat = True
		TemperatureModifier
		{
			key = 280 250 0 0
			key = 430 1140 18.3416 18.3416
			key = 500 2250 -1.147305 -46.264
			key = 501 0 0 0
		}
		DefaultShutoffTemp = 0.45
		ThermalEfficiency 
		{
			key = 280 0
			key = 500 1 0 0
			key = 505 1 0 0
			key = 550 1.5 0 0
			key = 700 0 0 0
		}
	}
	MODULE
	{
		name = ModuleOverheatDisplay
	}
	MODULE
	{
		name = ModuleCoreHeat
		//Internal temp goal - we don't transfer till we hit this point
		CoreTempGoal = 500
		//At what core temperature do we shut down all generators on this part?
		CoreShutdownTemp = 700
		//Maximum amount of radiator capacity we can consume - 50 = 1 small		
		MaxCoolant = 50
		// Uninteresting stuff
		CoreToPartRatio = 0.1
		CoreTempGoalAdjustment = 0
		CoreEnergyMultiplier = 0.1
		HeatRadiantMultiplier = 0.05
		CoolingRadiantMultiplier = 0
		HeatTransferMultiplier = 0
		CoolantTransferMultiplier = 0.01
		radiatorCoolingFactor = 1
		radiatorHeatingFactor = 0.05
		MaxCalculationWarp = 1000
	}
	
	MODULE
	{
		name = ModuleB9PartSwitch
		moduleID = FuelSelect
		switcherDescription = Fuel 
		switcherDescriptionPlural = Fuel Selections
		switchInFlight = True
		SUBTYPE
		{
			name = MONO
			title = Mono
			primaryColor = ResourceColorMonoPropellant
			secondaryColor = ResourceColorMonoPropellant
			descriptionSummary = MonoPropellant
			descriptionDetail = <b>Inputs = </b> 0.006 Mono/s <br><b>Outputs = </b> 1.5 EC/s.<br><color="orange">Please quicksave + quickload after applying.</color>
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleResourceConverter
				}
				DATA
				{
					INPUT_RESOURCE
					{
						ResourceName = MonoPropellant
						Ratio = 0.006
					}
				}
			}
		}
		SUBTYPE
		{
			name = Ammonia
			title = Ammonia
			primaryColor = BurntRed
			secondaryColor = BurntRed
			descriptionSummary = LqdAmmonia
			descriptionDetail = <b>Inputs = </b> 0.018 NH3/s <br><b>Outputs = </b> 1.5 EC/s.<br><color="orange">Please quicksave + quickload after applying.</color>
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleResourceConverter
				}
				DATA
				{
					INPUT_RESOURCE
					{
						ResourceName = LqdAmmonia
						Ratio = 0.018
					}
				}
			}
		}
	}
}