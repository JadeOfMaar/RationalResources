@PART:HAS[#RRConverter[Set]]:NEEDS[CommunityResourcePack,!RationalResourcesOmniConverters,!KerbalismDefault]:FOR[RationalResourcesCompanion]
{
	@RRConverter = isSet

	+MODULE[ModuleResourceConverter],0
	{
		@ConverterName = Basic // using moles
		@StartActionName = Start ISRU [Basic]
		@StopActionName = Stop ISRU [Basic]
		@ToggleActionName = Toggle ISRU [Basic]
		Tag = RR
		!resourceOutputName = nope
		!INPUT_RESOURCE,* {}
		!OUTPUT_RESOURCE,* {}
		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 30
		}
	}
	
	// Default Misc
	
	+MODULE[ModuleResourceConverter]:HAS[#ConverterName[Basic]]:NEEDS[!RealFuels]
	{
		@ConverterName = RR LFO // using moles
		@StartActionName = Start ISRU [RR LFO]
		@StopActionName = Stop ISRU [RR LFO]
		@ToggleActionName = Toggle ISRU [RR LFO]
		
		INPUT_RESOURCE
		{
			ResourceName = LqdHydrogen
			Ratio = 3.699 // 130
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE
		{
			ResourceName = LqdCO2
			Ratio = 4.501 // 120
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = LiquidFuel
			Ratio = 0.341 // 10
			FlowMode = STAGE_PRIORITY_FLOW
			DumpExcess = True
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Oxidizer
			Ratio = 0.768 // 120
			FlowMode = STAGE_PRIORITY_FLOW
			DumpExcess = True
		}
	}
	+MODULE[ModuleResourceConverter]:HAS[#ConverterName[Basic]]:NEEDS[!RealFuels]
	{
		@ConverterName = RR LiquidFuel // using kilos
		@StartActionName = Start ISRU [RR LiquidFuel]
		@StopActionName = Stop ISRU [RR LiquidFuel]
		@ToggleActionName = Toggle ISRU [RR LiquidFuel]
		INPUT_RESOURCE
		{
			ResourceName = LqdHydrogen
			Ratio = 1.85
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE
		{
			ResourceName = Carbon
			Ratio = 0.345
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = LiquidFuel
			Ratio = 0.3712
			FlowMode = STAGE_PRIORITY_FLOW
		}
	}
	+MODULE[ModuleResourceConverter]:HAS[#ConverterName[Basic]]:NEEDS[!RealFuels]
	{
		@ConverterName = RR MonoProp A // using moles
		@StartActionName = Start ISRU [RR MonoProp A]
		@StopActionName = Stop ISRU [RR MonoProp A]
		@ToggleActionName = Toggle ISRU [RR MonoProp A]
		INPUT_RESOURCE
		{
			ResourceName = LqdHydrogen
			Ratio = 5.691 // 200
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE
		{
			ResourceName = LqdNitrogen
			Ratio = 3.396 // 100
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = MonoPropellant
			Ratio = 0.427 // 100
			FlowMode = STAGE_PRIORITY_FLOW
		}
	}
	+MODULE[ModuleResourceConverter]:HAS[#ConverterName[Basic]]:NEEDS[!RealFuels]
	{
		@ConverterName = RR MonoProp B // using moles
		@StartActionName = Start ISRU [RR MonoProp B]
		@StopActionName = Stop ISRU [RR MonoProp B]
		@ToggleActionName = Toggle ISRU [RR MonoProp B]
		INPUT_RESOURCE
		{
			ResourceName = LqdAmmonia
			Ratio = 4.851 // 200
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = MonoPropellant
			Ratio = 0.427 // 100
			FlowMode = STAGE_PRIORITY_FLOW
			DumpExcess = True
		}
		OUTPUT_RESOURCE
		{
			ResourceName = LqdHydrogen
			Ratio = 2.845 // 100
			FlowMode = STAGE_PRIORITY_FLOW
			DumpExcess = True
		}
	}
	+MODULE[ModuleResourceConverter]:HAS[#ConverterName[Basic]]
	{
		@ConverterName = CarbonDioxide // using moles
		@StartActionName = Start ISRU [CarbonDioxide]
		@StopActionName = Stop ISRU [CarbonDioxide]
		@ToggleActionName = Toggle ISRU [CarbonDioxide]
		INPUT_RESOURCE
		{
			ResourceName = Carbon
			Ratio = 0.5719 // 100
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE
		{
			ResourceName = Oxygen
			Ratio = 2269.5035 // 100
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = CarbonDioxide
			Ratio = 2255.7663 // 100
			FlowMode = STAGE_PRIORITY_FLOW
		}
	}
	+MODULE[ModuleResourceConverter]:HAS[#ConverterName[Basic]]
	{
		@ConverterName = CarbonMonoxide A // using moles
		@StartActionName = Start ISRU [CarbonMonoxide A]
		@StopActionName = Stop ISRU [CarbonMonoxide A]
		@ToggleActionName = Toggle ISRU [CarbonMonoxide A]
		
		INPUT_RESOURCE
		{
			ResourceName = CarbonDioxide
			Ratio = 2255.7663 // 100
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = CarbonMonoxide
			Ratio = 2240.8 // 100
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Oxygen
			Ratio = 1134.7518 // 50
			FlowMode = STAGE_PRIORITY_FLOW
		}
	}
	+MODULE[ModuleResourceConverter]:HAS[#ConverterName[Basic]]
	{
		@ConverterName = CarbonMonoxide B // using moles
		@StartActionName = Start ISRU [CarbonMonoxide B]
		@StopActionName = Stop ISRU [CarbonMonoxide B]
		@ToggleActionName = Toggle ISRU [CarbonMonoxide B]
		
		INPUT_RESOURCE
		{
			ResourceName = Carbon
			Ratio = 0.5719 // 100
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE
		{
			ResourceName = Water
			Ratio = 1.8020 // 100
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = CarbonMonoxide
			Ratio = 2240.8 // 100
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Hydrogen
			Ratio = 2246.941 // 100
			FlowMode = STAGE_PRIORITY_FLOW
		}
	}
	+MODULE[ModuleResourceConverter]:HAS[#ConverterName[Basic]]:NEEDS[!RealFuels]
	{
		@ConverterName = RR Hydrolox // using kilos
		@StartActionName = Start ISRU [RR Hydrolox]
		@StopActionName = Stop ISRU [RR Hydrolox]
		@ToggleActionName = Toggle ISRU [RR Hydrolox]
		INPUT_RESOURCE
		{
			ResourceName = Water
			Ratio = 3.6
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = LqdHydrogen
			Ratio = 8.88
			FlowMode = STAGE_PRIORITY_FLOW
			DumpExcess = True
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Oxidizer
			Ratio = 0.592
			FlowMode = STAGE_PRIORITY_FLOW
			DumpExcess = True
		}
		OUTPUT_RESOURCE
		{
			ResourceName = LqdDeuterium
			Ratio = 0.0138
			FlowMode = STAGE_PRIORITY_FLOW
			DumpExcess = True
		}
	}
	+MODULE[ModuleResourceConverter]:HAS[#ConverterName[Basic]]:NEEDS[RealFuels]
	{
		@ConverterName = RR Hydrolox // using moles
		@StartActionName = Start ISRU [RR Hydrolox]
		@StopActionName = Stop ISRU [RR Hydrolox]
		@ToggleActionName = Toggle ISRU [RR Hydrolox]
		INPUT_RESOURCE
		{
			ResourceName = Water
			Ratio = 3.604 // 200
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = LqdHydrogen
			Ratio = 5.7022 // 200
			FlowMode = STAGE_PRIORITY_FLOW
			DumpExcess = True
		}
		OUTPUT_RESOURCE
		{
			ResourceName = LqdOxygen
			Ratio = 2.8046 // 100
			FlowMode = STAGE_PRIORITY_FLOW
			DumpExcess = True
		}
		OUTPUT_RESOURCE
		{
			ResourceName = LqdDeuterium
			Ratio = 0.0038 // 1/642 * 200 moles
			FlowMode = STAGE_PRIORITY_FLOW
			DumpExcess = True
		}
	}
	+MODULE[ModuleResourceConverter]:HAS[#ConverterName[Basic]]:NEEDS[!RealFuels]
	{
		@ConverterName = RR Methalox // using kilos
		@StartActionName = Start ISRU [RR Methalox]
		@StopActionName = Stop ISRU [RR Methalox]
		@ToggleActionName = Toggle ISRU [RR Methalox]
		INPUT_RESOURCE
		{
			ResourceName = LqdHydrogen
			Ratio = 7.53
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE
		{
			ResourceName = LqdCO2
			Ratio = 5.02
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = LqdMethane
			Ratio = 7.544
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Oxidizer
			Ratio = 0.64
			FlowMode = STAGE_PRIORITY_FLOW
			DumpExcess = True
		}
	}
	+MODULE[ModuleResourceConverter]:HAS[#ConverterName[Basic]]:NEEDS[RealFuels]
	{
		@ConverterName = RR Methalox // using moles
		@StartActionName = Start ISRU [RR Methalox]
		@StopActionName = Stop ISRU [RR Methalox]
		@ToggleActionName = Toggle ISRU [RR Methalox]
		INPUT_RESOURCE
		{
			ResourceName = LqdHydrogen
			Ratio = 5.7022 // 200
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE
		{
			ResourceName = LqdCO2
			Ratio = 3.7512 // 100
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = LqdMethane
			Ratio = 3.771 // 100
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = LqdOxygen
			Ratio = 2.8046 // 100
			FlowMode = STAGE_PRIORITY_FLOW
			DumpExcess = True
		}
	}
	+MODULE[ModuleResourceConverter]:HAS[#ConverterName[Basic]]
	{
		@ConverterName = LqdAmmonia // using moles
		@StartActionName = Start ISRU [LqdAmmonia]
		@StopActionName = Stop ISRU [LqdAmmonia]
		@ToggleActionName = Toggle ISRU [LqdAmmonia]
		INPUT_RESOURCE
		{
			ResourceName = LqdHydrogen
			Ratio = 0.8536 // 30
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE
		{
			ResourceName = LqdNitrogen
			Ratio = 0.3396 // 10
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = LqdAmmonia
			Ratio = 0.4851 // 20
			FlowMode = STAGE_PRIORITY_FLOW
		}
	}
	+MODULE[ModuleResourceConverter]:HAS[#ConverterName[Basic]]:NEEDS[KerbalHealth]
	{
		@ConverterName = RR Lead Extractor
		@StartActionName = Start ISRU [RR Lead Extractor]
		@StopActionName = Stop ISRU [RR Lead Extractor]
		@ToggleActionName = Toggle ISRU [RR Lead Extractor]
		INPUT_RESOURCE
		{
			ResourceName = MetallicOre
			Ratio = 0.03921830769 // Same input rate by mass as alumina splitter
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Lead
			Ratio = 0.00899185185 // 10:1 input/output ratio by mass
			FlowMode = STAGE_PRIORITY_FLOW
		}
	}
	+MODULE[ModuleResourceConverter]:HAS[#ConverterName[Basic]]:NEEDS[DeepFreeze]
	{
		@ConverterName = RR Glykerol // Glycerol, C3H8O3
		@StartActionName = Start ISRU [RR Glykerol]
		@StopActionName = Stop ISRU [RR Glykerol]
		@ToggleActionName = Toggle ISRU [RR Glykerol]
		INPUT_RESOURCE
		{
			ResourceName = Water
			Ratio = 0.00010867519
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE
		{
			ResourceName = Carbon
			Ratio = 0.00002587720
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Glykerol
			Ratio = 0.00011574074 // calibrated for 5 units every 12 hours
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Oxygen
			Ratio = 0.01711235940
			FlowMode = STAGE_PRIORITY_FLOW
			DumpExcess = True // Byproduct
		}
	}
	
	+MODULE[ModuleResourceConverter]:HAS[#ConverterName[Basic]]:NEEDS[GroundConstruction]
	{
		@ConverterName = RR MaterialKits // using moles
		@StartActionName = Start ISRU [RR MaterialKits]
		@StopActionName = Stop ISRU [RR MaterialKits]
		@ToggleActionName = Toggle ISRU [RR MaterialKits]
		
		@INPUT_RESOURCE:HAS[#ResourceName[ElectricCharge]] 
		{
			@Ratio = 90
		}
		INPUT_RESOURCE
		{
			ResourceName = Minerals
			Ratio = 0.16
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE
		{
			ResourceName = Metals
			Ratio = 0.16
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = MaterialKits
			Ratio = 0.4 // 23.8% useful output by mass; prefering less decimal precision
			FlowMode = STAGE_PRIORITY_FLOW
		}
	}
	
	// Default Splitters
	
	+MODULE[ModuleResourceConverter]:HAS[#ConverterName[Basic]]:NEEDS[!RationalResourcesAluminium]
	{
		@ConverterName = Alumina Splitter // using moles
		@StartActionName = Start ISRU [Alumina Splitter]
		@StopActionName = Stop ISRU [Alumina Splitter]
		@ToggleActionName = Toggle ISRU [Alumina Splitter]
		INPUT_RESOURCE
		{
			ResourceName = Alumina
			Ratio = 0.2562 // 10
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Metals
			Ratio = 0.501 // 7
			FlowMode = STAGE_PRIORITY_FLOW
			DumpExcess = True
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Oxygen
			Ratio = 113.4752 // 5
			FlowMode = STAGE_PRIORITY_FLOW
			DumpExcess = True
		}
	}
	+MODULE[ModuleResourceConverter]:HAS[#ConverterName[Basic]]:NEEDS[RationalResourcesAluminium]
	{
		@ConverterName = Alumina Splitter // using moles
		@StartActionName = Start ISRU [Alumina Splitter]
		@StopActionName = Stop ISRU [Alumina Splitter]
		@ToggleActionName = Toggle ISRU [Alumina Splitter]
		INPUT_RESOURCE
		{
			ResourceName = Alumina
			Ratio = 0.2562 // 10
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Aluminium
			Ratio = 0.1948 // 20
			FlowMode = STAGE_PRIORITY_FLOW
			DumpExcess = True
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Oxygen
			Ratio = 340.4255 // 15
			FlowMode = STAGE_PRIORITY_FLOW
			DumpExcess = True
		}
	}
	+MODULE[ModuleResourceConverter]:HAS[#ConverterName[Basic]]
	{
		@ConverterName = CO2 Splitter // using moles
		@StartActionName = Start ISRU [CO2 Splitter]
		@StopActionName = Stop ISRU [CO2 Splitter]
		@ToggleActionName = Toggle ISRU [CO2 Splitter]
		INPUT_RESOURCE
		{
			ResourceName = CarbonDioxide
			Ratio = 22.5818 // 10
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Oxygen
			Ratio = 22.69504 // 10
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Carbon
			Ratio = 0.024 // 10
			FlowMode = STAGE_PRIORITY_FLOW
			DumpExcess = True
		}
	}
	+MODULE[ModuleResourceConverter]:HAS[#ConverterName[Basic]]
	{
		@ConverterName = ExoticMinerals Splitter // using moles
		@StartActionName = Start ISRU [ExoticMinerals Splitter]
		@StopActionName = Stop ISRU [ExoticMinerals Splitter]
		@ToggleActionName = Toggle ISRU [ExoticMinerals Splitter]
		@INPUT_RESOURCE:HAS[#ResourceName[ElectricCharge]] 
		{
			@Ratio = 60 // Cost includes refrigeration leading to the cryogens
		}
		INPUT_RESOURCE
		{
			ResourceName = ExoticMinerals
			Ratio = 0.36358 // 1.36 moles
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Caesium // For Suplementary Electric Engines mod
			Ratio = 0.06887 // 1
			FlowMode = STAGE_PRIORITY_FLOW
			DumpExcess = True
		}
		OUTPUT_RESOURCE
		{
			ResourceName = LqdFluorine
			Ratio = 0.02525 // 2
			FlowMode = STAGE_PRIORITY_FLOW
			DumpExcess = True
		}
		OUTPUT_RESOURCE
		{
			ResourceName = RareMetals // currently treated as only Platinum
			Ratio = 0.05002 // 2
			FlowMode = STAGE_PRIORITY_FLOW
			DumpExcess = True
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Metals
			Ratio = 0.01432 // 1
			FlowMode = STAGE_PRIORITY_FLOW
			DumpExcess = True
		}
		OUTPUT_RESOURCE:NEEDS[SterlingSystems]
		{
			ResourceName = Beryllium
			Ratio = 0.012 // 1
			FlowMode = STAGE_PRIORITY_FLOW
			DumpExcess = True
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Silicon
			Ratio = 0.02412 // 2
			FlowMode = STAGE_PRIORITY_FLOW
			DumpExcess = True
		}
		OUTPUT_RESOURCE
		{
			ResourceName = LqdOxygen
			Ratio = 0.14023 // 5
			FlowMode = STAGE_PRIORITY_FLOW
			DumpExcess = True
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Boron // KSPI-E users might use this
			Ratio = 0.012 // 1
			FlowMode = STAGE_PRIORITY_FLOW
			DumpExcess = True
		}
	}
	+MODULE[ModuleResourceConverter]:HAS[#ConverterName[Basic]]
	{
		@ConverterName = Hydrates Splitter // using moles
		@StartActionName = Start ISRU [Hydrates Splitter]
		@StopActionName = Stop ISRU [Hydrates Splitter]
		@ToggleActionName = Toggle ISRU [Hydrates Splitter]
		INPUT_RESOURCE
		{
			ResourceName = Hydrates
			Ratio = 0.3014 // 2.6803
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Water
			Ratio = 0.209 // 1
			FlowMode = STAGE_PRIORITY_FLOW
			DumpExcess = True
		}
		OUTPUT_RESOURCE
		{
			ResourceName = XenonGas
			Ratio = 0.0144 // 0.011; nerfed for gameplay balance
			FlowMode = STAGE_PRIORITY_FLOW
			DumpExcess = True
		}
		OUTPUT_RESOURCE
		{
			ResourceName = ArgonGas
			Ratio = 0.8957 // 0.02; nerfed to 1/100 for gameplay balance
			FlowMode = STAGE_PRIORITY_FLOW
			DumpExcess = True
		}
		OUTPUT_RESOURCE
		{
			ResourceName = MetallicOre
			Ratio = 0.0381
			FlowMode = STAGE_PRIORITY_FLOW
			DumpExcess = True
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Oxygen
			Ratio = 21 // 3
			FlowMode = STAGE_PRIORITY_FLOW
			DumpExcess = True
		}
	}
	+MODULE[ModuleResourceConverter]:HAS[#ConverterName[Basic]]
	{
		@ConverterName = Methane Splitter // using moles
		@StartActionName = Start ISRU [Methane Splitter]
		@StopActionName = Stop ISRU [Methane Splitter]
		@ToggleActionName = Toggle ISRU [Methane Splitter]
		INPUT_RESOURCE
		{
			ResourceName = LqdMethane
			Ratio = 1.8855 // 50
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = LqdHydrogen
			Ratio = 2.8511 // 100
			FlowMode = STAGE_PRIORITY_FLOW
			DumpExcess = True
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Carbon
			Ratio = 0.286 // 50
			FlowMode = STAGE_PRIORITY_FLOW
			DumpExcess = True
		}
	}
	+MODULE[ModuleResourceConverter]:HAS[#ConverterName[Basic]]
	{
		@ConverterName = Minerals Splitter // using moles
		@StartActionName = Start ISRU [Minerals Splitter]
		@StopActionName = Stop ISRU [Minerals Splitter]
		@ToggleActionName = Toggle ISRU [Minerals Splitter]
		@INPUT_RESOURCE:HAS[#ResourceName[ElectricCharge]] 
		{
			@Ratio = 60
		}
		INPUT_RESOURCE
		{
			ResourceName = Minerals
			Ratio = 0.25495 // 1.715 moles
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = LqdFluorine
			Ratio = 0.02525
			FlowMode = STAGE_PRIORITY_FLOW
			DumpExcess = True
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Metals
			Ratio = 0.04296
			FlowMode = STAGE_PRIORITY_FLOW
			DumpExcess = True
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Aluminium
			Ratio = 0.00974
			FlowMode = STAGE_PRIORITY_FLOW
			DumpExcess = True
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Silicon
			Ratio = 0.03618
			FlowMode = STAGE_PRIORITY_FLOW
			DumpExcess = True
		}
		OUTPUT_RESOURCE
		{
			ResourceName = LqdOxygen
			Ratio = 0.14023
			FlowMode = STAGE_PRIORITY_FLOW
			DumpExcess = True
		}
		OUTPUT_RESOURCE
		{
			ResourceName = LqdCO2
			Ratio = 0.03751
			FlowMode = STAGE_PRIORITY_FLOW
			DumpExcess = True
		}
	}
	+MODULE[ModuleResourceConverter]:HAS[#ConverterName[Basic]]
	{
		@ConverterName = Monazite Splitter // using moles
		@StartActionName = Start ISRU [Monazite Splitter]
		@StopActionName = Stop ISRU [Monazite Splitter]
		@ToggleActionName = Toggle ISRU [Monazite Splitter]
		INPUT_RESOURCE
		{
			ResourceName = Monazite
			Ratio = 0.15005 // 1
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = RareMetals
			Ratio = 0.04604 // 1.841
			FlowMode = STAGE_PRIORITY_FLOW
			DumpExcess = True
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Phosphorus
			Ratio = 0.00619 // 1
			FlowMode = STAGE_PRIORITY_FLOW
			DumpExcess = True
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Oxygen
			Ratio = 90.78014 // 4
			FlowMode = STAGE_PRIORITY_FLOW
			DumpExcess = True
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Thorium
			Ratio = 0.01983 // 1
			FlowMode = STAGE_PRIORITY_FLOW
			DumpExcess = True
		}
	}
	+MODULE[ModuleResourceConverter]:HAS[#ConverterName[Basic]]
	{
		@ConverterName = RR Ore Splitter // using moles
		@StartActionName = Start ISRU [RR Ore Splitter]
		@StopActionName = Stop ISRU [RR Ore Splitter]
		@ToggleActionName = Toggle ISRU [RR Ore Splitter]
		@INPUT_RESOURCE:HAS[#ResourceName[ElectricCharge]] 
		{
			@Ratio = 60
		}
		INPUT_RESOURCE // fudged relationship
		{
			ResourceName = Ore
			Ratio = 0.4144 // 20
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Carbon
			Ratio = 0.0858 // 15
			FlowMode = STAGE_PRIORITY_FLOW
			DumpExcess = True
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Oxygen
			Ratio = 1361.7021 // 60
			FlowMode = STAGE_PRIORITY_FLOW
			DumpExcess = True
		}
	}
	+MODULE[ModuleResourceConverter]:HAS[#ConverterName[Basic]]
	{
		@ConverterName = Silicates Splitter // using moles
		@StartActionName = Start ISRU [Silicates Splitter]
		@StopActionName = Stop ISRU [Silicates Splitter]
		@ToggleActionName = Toggle ISRU [Silicates Splitter]
		INPUT_RESOURCE
		{
			ResourceName = Silicates
			Ratio = 0.0609 // 2
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Oxygen
			Ratio = 90.7801 // 4
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Silicon
			Ratio = 0.0241 // 1.999
			FlowMode = STAGE_PRIORITY_FLOW
			DumpExcess = True
		}
	}
	+MODULE[ModuleResourceConverter]:HAS[#ConverterName[Basic]]:NEEDS[!RationalResourcesAluminium]
	{
		@ConverterName = Spodumene Splitter // using moles
		@StartActionName = Start ISRU [Spodumene Splitter]
		@StopActionName = Stop ISRU [Spodumene Splitter]
		@ToggleActionName = Toggle ISRU [Spodumene Splitter]
		INPUT_RESOURCE
		{
			ResourceName = Spodumene
			Ratio = 0.06 // 1
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Lithium
			Ratio = 0.013 // 1
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Metals
			Ratio = 0.0660 // 0.9228
			FlowMode = STAGE_PRIORITY_FLOW
			DumpExcess = True
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Silicates
			Ratio = 0.0304 // 1
			FlowMode = STAGE_PRIORITY_FLOW
			DumpExcess = True
		}
	}
	+MODULE[ModuleResourceConverter]:HAS[#ConverterName[Basic]]:NEEDS[RationalResourcesAluminium]
	{
		@ConverterName = Spodumene Splitter // using moles
		@StartActionName = Start ISRU [Spodumene Splitter]
		@StopActionName = Stop ISRU [Spodumene Splitter]
		@ToggleActionName = Toggle ISRU [Spodumene Splitter]
		INPUT_RESOURCE
		{
			ResourceName = Spodumene
			Ratio = 0.6 // 10
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Lithium
			Ratio = 0.13 // 10
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Aluminium
			Ratio = 0.097 // 10
			FlowMode = STAGE_PRIORITY_FLOW
			DumpExcess = True
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Silicates
			Ratio = 0.0609 // 20
			FlowMode = STAGE_PRIORITY_FLOW
			DumpExcess = True
		}
	}
	+MODULE[ModuleResourceConverter]:HAS[#ConverterName[Basic]]
	{
		@ConverterName = Water Splitter // using moles
		@StartActionName = Start ISRU [Water Splitter]
		@StopActionName = Stop ISRU [Water Splitter]
		@ToggleActionName = Toggle ISRU [Water Splitter]
		INPUT_RESOURCE
		{
			ResourceName = Water
			Ratio = 3.604 // 200
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Hydrogen
			Ratio = 4493.882 // 200
			FlowMode = STAGE_PRIORITY_FLOW
			DumpExcess = True
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Oxygen
			Ratio = 2269.5036 // 100
			FlowMode = STAGE_PRIORITY_FLOW
			DumpExcess = True
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Deuterium
			Ratio = 6.9998 // 1/642 of Hydrogen
			FlowMode = STAGE_PRIORITY_FLOW
			DumpExcess = True
		}
	}
	
	// RealFuels Misc
	
	+MODULE[ModuleResourceConverter]:HAS[#ConverterName[Basic]]:NEEDS[RealFuels]
	{
		@ConverterName = Aerozine50 // using moles
		@StartActionName = Start ISRU [Aerozine50]
		@StopActionName = Stop ISRU [Aerozine50]
		@ToggleActionName = Toggle ISRU [Aerozine50]
		@Tag = RRRF
		
		@INPUT_RESOURCE:HAS[#ResourceName[ElectricCharge]] 
		{
			@Ratio = 6
		}
		INPUT_RESOURCE
		{
			ResourceName = MMH
			Ratio = 0.4544 // 8.6793
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE
		{
			ResourceName = UDMH
			Ratio = 0.6595 // 8.6793
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Aerozine50
			FlowMode = STAGE_PRIORITY_FLOW
			Ratio = 1.0238 // 20
		}
	}
	+MODULE[ModuleResourceConverter]:HAS[#ConverterName[Basic]]:NEEDS[RealFuels]
	{
		@ConverterName = Ethanol A // using moles
		@StartActionName = Start ISRU [Ethanol A]
		@StopActionName = Stop ISRU [Ethanol A]
		@ToggleActionName = Toggle ISRU [Ethanol A]
		@Tag = RRRF
		
		INPUT_RESOURCE
		{
			ResourceName = Carbon
			Ratio = 0.048 // 20
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE
		{
			ResourceName = LqdHydrogen
			Ratio = 0.855 // 30
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE
		{
			ResourceName = LqdOxygen
			Ratio = 0.14 // 5
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Ethanol
			Ratio = 0.5839 // 10
			FlowMode = STAGE_PRIORITY_FLOW
		}
	}
	+MODULE[ModuleResourceConverter]:HAS[#ConverterName[Basic]]:NEEDS[RealFuels]
	{
		@ConverterName = Ethanol B // using moles
		@StartActionName = Start ISRU [Ethanol B]
		@StopActionName = Stop ISRU [Ethanol B]
		@ToggleActionName = Toggle ISRU [Ethanol B]
		@Tag = RRRF
		
		INPUT_RESOURCE
		{
			ResourceName = LqdMethane
			Ratio = 0.7542 // 20
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE
		{
			ResourceName = LqdOxygen
			Ratio = 0.1402 // 5
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Ethanol
			Ratio = 0.5839 // 10
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = LqdHydrogen
			Ratio = 0.2851 // 10
			FlowMode = STAGE_PRIORITY_FLOW
			DumpExcess = True
		}
	}
	+MODULE[ModuleResourceConverter]:HAS[#ConverterName[Basic]]:NEEDS[RealFuels]
	{
		@ConverterName = Ethanol75 A // using moles
		@StartActionName = Start ISRU [Ethanol75 A]
		@StopActionName = Stop ISRU [Ethanol75 A]
		@ToggleActionName = Toggle ISRU [Ethanol75 A]
		@Tag = RRRF
		
		INPUT_RESOURCE
		{
			ResourceName = Carbon
			Ratio = 0.048 // 20
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE
		{
			ResourceName = LqdHydrogen
			Ratio = 0.855 // 30
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE
		{
			ResourceName = LqdOxygen
			Ratio = 0.14 // 5
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE
		{
			ResourceName = Water
			Ratio = 0.151 // 8.4
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Ethanol75
			Ratio = 0.727 // 10
			FlowMode = STAGE_PRIORITY_FLOW
		}
	}
	+MODULE[ModuleResourceConverter]:HAS[#ConverterName[Basic]]:NEEDS[RealFuels]
	{
		@ConverterName = Ethanol75 B // using moles
		@StartActionName = Start ISRU [Ethanol75 B]
		@StopActionName = Stop ISRU [Ethanol75 B]
		@ToggleActionName = Toggle ISRU [Ethanol75 B]
		@Tag = RRRF
		
		@INPUT_RESOURCE:HAS[#ResourceName[ElectricCharge]] 
		{
			@Ratio = 6
		}
		INPUT_RESOURCE
		{
			ResourceName = Ethanol
			Ratio = 0.584 // 10
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE
		{
			ResourceName = Water
			Ratio = 0.151 // 8.4
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Ethanol75
			Ratio = 0.727 // 10
			FlowMode = STAGE_PRIORITY_FLOW
		}
	}
	+MODULE[ModuleResourceConverter]:HAS[#ConverterName[Basic]]:NEEDS[RealFuels]
	{
		@ConverterName = HTP // using moles
		@StartActionName = Start ISRU [HTP]
		@StopActionName = Stop ISRU [HTP]
		@ToggleActionName = Toggle ISRU [HTP]
		@Tag = RRRF
		
		INPUT_RESOURCE
		{
			ResourceName = LqdHydrogen
			Ratio = 0.285 // 10
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE
		{
			ResourceName = LqdOxygen
			Ratio = 0.28 // 10
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = HTP
			Ratio = 0.238 // 10
			FlowMode = STAGE_PRIORITY_FLOW
		}
	}
	+MODULE[ModuleResourceConverter]:HAS[#ConverterName[Basic]]:NEEDS[RealFuels]
	{
		@ConverterName = Hydrazine // using moles
		@StartActionName = Start ISRU [Hydrazine]
		@StopActionName = Stop ISRU [Hydrazine]
		@ToggleActionName = Toggle ISRU [Hydrazine]
		@Tag = RRRF
		
		INPUT_RESOURCE
		{
			ResourceName = LqdHydrogen
			Ratio = 0.57 // 20
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE
		{
			ResourceName = LqdNitrogen
			Ratio = 0.34 // 10
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Hydrazine
			Ratio = 0.319 // 10
			FlowMode = STAGE_PRIORITY_FLOW
		}
	}
	+MODULE[ModuleResourceConverter]:HAS[#ConverterName[Basic]]:NEEDS[RealFuels]
	{
		@ConverterName = Kerosene // using moles
		@StartActionName = Start ISRU [Kerosene]
		@StopActionName = Stop ISRU [Kerosene]
		@ToggleActionName = Toggle ISRU [Kerosene]
		@Tag = RRRF
		
		INPUT_RESOURCE
		{
			ResourceName = Carbon
			Ratio = 0.1372 // 24
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE
		{
			ResourceName = LqdHydrogen
			Ratio = 0.7412 // 26
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Kerosene
			Ratio = 0.4154 // 2
			FlowMode = STAGE_PRIORITY_FLOW
		}
	}
	+MODULE[ModuleResourceConverter]:HAS[#ConverterName[Basic]]:NEEDS[RealFuels]
	{
		@ConverterName = MMH A // using moles
		@StartActionName = Start ISRU [MMH A]
		@StopActionName = Stop ISRU [MMH A]
		@ToggleActionName = Toggle ISRU [MMH A]
		@Tag = RRRF
		
		INPUT_RESOURCE
		{
			ResourceName = Carbon
			Ratio = 0.057 // 10
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE
		{
			ResourceName = LqdHydrogen
			Ratio = 0.855 // 30
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE
		{
			ResourceName = LqdNitrogen
			Ratio = 0.34 // 10
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = MMH
			Ratio = 0.524 // 10
			FlowMode = STAGE_PRIORITY_FLOW
		}
	}
	+MODULE[ModuleResourceConverter]:HAS[#ConverterName[Basic]]:NEEDS[RealFuels]
	{
		@ConverterName = MMH B // using moles
		@StartActionName = Start ISRU [MMH B]
		@StopActionName = Stop ISRU [MMH B]
		@ToggleActionName = Toggle ISRU [MMH B]
		@Tag = RRRF
		
		INPUT_RESOURCE
		{
			ResourceName = Carbon
			Ratio = 0.057 // 10
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE
		{
			ResourceName = Hydrazine
			Ratio = 0.319 // 10
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE
		{
			ResourceName = LqdHydrogen
			Ratio = 0.285 // 10
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = MMH
			Ratio = 0.524 // 10
			FlowMode = STAGE_PRIORITY_FLOW
		}
	}
	+MODULE[ModuleResourceConverter]:HAS[#ConverterName[Basic]]:NEEDS[RealFuels]
	{
		@ConverterName = MMH C // using moles
		@StartActionName = Start ISRU [MMH C]
		@StopActionName = Stop ISRU [MMH C]
		@ToggleActionName = Toggle ISRU [MMH C]
		@Tag = RRRF
		
		INPUT_RESOURCE
		{
			ResourceName = Hydrazine
			Ratio = 0.319 // 10
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE
		{
			ResourceName = LqdMethane
			Ratio = 0.377 // 10
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = MMH
			Ratio = 0.524 // 10
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = LqdHydrogen
			Ratio = 0.285 // 10
			FlowMode = STAGE_PRIORITY_FLOW
			DumpExcess = True
		}
	}
	+MODULE[ModuleResourceConverter]:HAS[#ConverterName[Basic]]:NEEDS[RealFuels]
	{
		@ConverterName = NTO // using moles
		@StartActionName = Start ISRU [NTO]
		@StopActionName = Stop ISRU [NTO]
		@ToggleActionName = Toggle ISRU [NTO]
		@Tag = RRRF
		
		INPUT_RESOURCE
		{
			ResourceName = LqdNitrogen
			Ratio = 0.1698 // 5
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE
		{
			ResourceName = LqdOxygen
			Ratio = 0.2805 // 10
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = NTO
			Ratio = 0.3174 // 5
			FlowMode = STAGE_PRIORITY_FLOW
			DumpExcess = True
		}
	}
	+MODULE[ModuleResourceConverter]:HAS[#ConverterName[Basic]]:NEEDS[RealFuels]
	{
		@ConverterName = UDMH // using moles
		@StartActionName = Start ISRU [UDMH]
		@StopActionName = Stop ISRU [UDMH]
		@ToggleActionName = Toggle ISRU [UDMH]
		@Tag = RRRF
		
		INPUT_RESOURCE
		{
			ResourceName = Carbon
			Ratio = 0.114 // 20
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE
		{
			ResourceName = LqdHydrogen
			Ratio = 1.14 // 40
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE
		{
			ResourceName = LqdNitrogen
			Ratio = 0.34 // 10
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = UDMH
			Ratio = 0.76 // 10
			FlowMode = STAGE_PRIORITY_FLOW
		}
	}
	
	+MODULE[ModuleResourceConverter]:HAS[#ConverterName[Basic]]:NEEDS[RealFuels]
	{
		@ConverterName = UH25 // using moles
		@StartActionName = Start ISRU [UH25]
		@StopActionName = Stop ISRU [UH25]
		@ToggleActionName = Toggle ISRU [UH25]
		@Tag = RRRF
		
		@INPUT_RESOURCE:HAS[#ResourceName[ElectricCharge]] 
		{
			@Ratio = 6
		}
		INPUT_RESOURCE
		{
			ResourceName = MMH
			Ratio = 0.2455 // 4.6903
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE
		{
			ResourceName = UDMH
			Ratio = 1.0691 // 14.0709
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = UH25
			Ratio = 1.2807 // 20
			FlowMode = STAGE_PRIORITY_FLOW
		}
	}
	
	// RealFuels Splitters
	
	+MODULE[ModuleResourceConverter]:HAS[#ConverterName[Basic]]:NEEDS[RealFuels]
	{
		@ConverterName = HTP Splitter // using moles
		@StartActionName = Start ISRU [HTP Splitter]
		@StopActionName = Stop ISRU [HTP Splitter]
		@ToggleActionName = Toggle ISRU [HTP Splitter]
		@Tag = RRRF
		
		INPUT_RESOURCE
		{
			ResourceName = HTP
			Ratio = 0.238 // 10
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = LqdHydrogen
			Ratio = 0.285 // 10
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = LqdOxygen
			Ratio = 0.28 // 10
			FlowMode = STAGE_PRIORITY_FLOW
			DumpExcess = True
		}
	}
	+MODULE[ModuleResourceConverter]:HAS[#ConverterName[Basic]]:NEEDS[RealFuels]
	{
		@ConverterName = Hydrazine Splitter // using moles
		@StartActionName = Start ISRU [Hydrazine Splitter]
		@StopActionName = Stop ISRU [Hydrazine Splitter]
		@ToggleActionName = Toggle ISRU [Hydrazine Splitter]
		@Tag = RRRF
		
		INPUT_RESOURCE
		{
			ResourceName = Hydrazine
			Ratio = 0.319 // 10
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = LqdHydrogen
			Ratio = 0.57 // 20
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = LqdNitrogen
			Ratio = 0.34 // 10
			FlowMode = STAGE_PRIORITY_FLOW
			DumpExcess = True
		}
	}
	
	// Exotic 
	+MODULE[ModuleResourceConverter]:HAS[#ConverterName[Basic]]
	{
		@ConverterName = RR Orion Pulse Crafting // using moles
		@StartActionName = Start ISRU [Orion Pulse Crafting]
		@StopActionName = Stop ISRU [Orion Pulse Crafting]
		@ToggleActionName = Toggle ISRU [Orion Pulse Crafting]
		
		INPUT_RESOURCE
		{
			ResourceName = Metals
			Ratio = 0.28638 // 20
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE
		{
			ResourceName = RareMetals
			Ratio = 0.54022 // 21.6, compare to 20 mol of Sterling's Beryl Oxide
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE
		{
			ResourceName = Uraninite
			Ratio = 0.31684 // 8.8 after subtracting the O2 from the UO2
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 30
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = FissionPulses 
			Ratio = 0.11861 // 8
			FlowMode = STAGE_PRIORITY_FLOW
		}
	}
	
	
	// = = = = = I/O Scaling and cleanup
	
	
	@MODULE[ModuleResourceConverter]:HAS[#Tag[RR]],*
	{
		@INPUT_RESOURCE,*
		{
			@Ratio *= #$/RRPower$
		}
		@OUTPUT_RESOURCE,*
		{
			@Ratio *= #$/RRPower$
		}
	}
	!MODULE[ModuleResourceConverter]:HAS[#ConverterName[Basic]] {}
	
	MODULE:NEEDS[B9PartSwitch]
	{
		name = ModuleB9AssignUiGroups
		MODULE
		{
			IDENTIFIER
			{
				name = ModuleResourceConverter
				Tag = RR
			}
			uiGroupName = Default
			uiGroupDisplayName = Default
		}
		MODULE
		{
			IDENTIFIER
			{
				name = ModuleResourceConverter
				Tag = RRRF
			}
			uiGroupName = RealFuels
			uiGroupDisplayName = Real Fuels
		}
	}
}

// If mod parts, purge untagged converter options
@PART:HAS[#RRConverter[isSet],~isStock]:NEEDS[CommunityResourcePack,!KerbalismDefault]:FOR[zRationalResources]
{
	!MODULE[ModuleResourceConverter]:HAS[~Tag[RR*]],* {}
}
