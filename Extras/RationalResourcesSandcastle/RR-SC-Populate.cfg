// - - - - - Per part mix

// - - - Whole categories

// Any command device except chairs
@PART:HAS[#category[Pods],!MODULE[KerbalSeat],~RRPrtReq]:FOR[zRationalResources]
{
	RRPrtReq = Full
	%MODULE[WBIPrinterRequirements] {}
	PRINT_RESOURCE
	{
		name = RRKitActuators
		rate = 0
	}
	PRINT_RESOURCE
	{
		name = RRKitElectronics
		rate = 1.5
	}
	PRINT_RESOURCE
	{
		name = RRKitMicroprocessors
		rate = 0.1
	}
}

// Any command chairs
@PART:HAS[#category[Pods],@MODULE[KerbalSeat],~RRPrtReq]:FOR[zRationalResources]
{
	RRPrtReq = Full
	%MODULE[WBIPrinterRequirements] {}
	PRINT_RESOURCE
	{
		name = RRKitActuators
		rate = 0
	}
	PRINT_RESOURCE
	{
		name = RRKitElectronics
		rate = 0.3
	}
	PRINT_RESOURCE
	{
		name = RRKitMicroprocessors
		rate = 0.025
	}
	%MODULE[WBIPrinterRequirements] {}
}

// Any electrical
@PART:HAS[#category[Electrical],~RRPrtReq]:FOR[zRationalResources]
{
	RRPrtReq = Full
	%MODULE[WBIPrinterRequirements] {}
	PRINT_RESOURCE
	{
		name = RRKitActuators
		rate = 0
	}
	PRINT_RESOURCE
	{
		name = RRKitElectronics
		rate = 0.75
	}
	PRINT_RESOURCE
	{
		name = RRKitMicroprocessors
		rate = 0
	}
}

// Any command & control
@PART:HAS[#category[Control],~RRPrtReq]:FOR[zRationalResources]
{
	RRPrtReq = Full
	%MODULE[WBIPrinterRequirements] {}
	PRINT_RESOURCE
	{
		name = RRKitActuators
		rate = 0.4
	}
	PRINT_RESOURCE
	{
		name = RRKitElectronics
		rate = 0.4
	}
	PRINT_RESOURCE
	{
		name = RRKitMicroprocessors
		rate = 0
	}
}
// Any joiners and breakers
@PART:HAS[#category[Coupling],~RRPrtReq]:FOR[zRationalResources]
{
	RRPrtReq = Full
	%MODULE[WBIPrinterRequirements] {}
	PRINT_RESOURCE
	{
		name = RRKitActuators
		rate = 0.5
	}
	PRINT_RESOURCE
	{
		name = RRKitElectronics
		rate = 0.3
	}
	PRINT_RESOURCE
	{
		name = RRKitMicroprocessors
		rate = 0
	}
}

// Any wheel or leg
// @PART:HAS[#category[Ground],~RRPrtReq]:FOR[zRationalResources]
// {
	// RRPrtReq = Full
	// %MODULE[WBIPrinterRequirements] {}
	// PRINT_RESOURCE
	// {
		// name = RRKitActuators
		// rate = 0.75
	// }
	// PRINT_RESOURCE
	// {
		// name = RRKitElectronics
		// rate = 0
	// }
	// PRINT_RESOURCE
	// {
		// name = RRKitMicroprocessors
		// rate = 0
	// }
// }

// Any non-builtin antenna
// @PART:HAS[#category[Communication],~RRPrtReq]:FOR[zRationalResources]
// {
	// RRPrtReq = Full
	// %MODULE[WBIPrinterRequirements] {}
	// PRINT_RESOURCE
	// {
		// name = RRKitActuators
		// rate = 0.15
	// }
	// PRINT_RESOURCE
	// {
		// name = RRKitElectronics
		// rate = 0.8
	// }
	// PRINT_RESOURCE
	// {
		// name = RRKitMicroprocessors
		// rate = 0.3
	// }
// }

// Any science lab
@PART:HAS[@MODULE[*ModuleScience*],#CrewCapacity,~RRPrtReq]:FOR[zRationalResources]
{
	RRPrtReq = Full
	%MODULE[WBIPrinterRequirements] {}
	PRINT_RESOURCE
	{
		name = RRKitActuators
		rate = 0
	}
	PRINT_RESOURCE
	{
		name = RRKitElectronics
		rate = 0.4
	}
	PRINT_RESOURCE
	{
		name = RRKitMicroprocessors
		rate = 0.05
	}
	REQUIRED_COMPONENT
	{
		name = evaScienceKit
		amount = #$/CrewCapacity$
	}
}

// Any science experiment
@PART:HAS[@MODULE[*ModuleScienceExperiment]]:FOR[zRationalResources]
{
	@PRINT_RESOURCE[RRKitActuators]
	{
		@rate = 0
	}
	@PRINT_RESOURCE[RRKitElectronics]
	{
		@rate = 0.5
	}
	@PRINT_RESOURCE[RRKitMicroprocessors]
	{
		@rate = 0
	}
	@REQUIRED_COMPONENT[evaScienceKit]
	{
		@amount = 1
	}
}

// Any robotics
// @PART:HAS[#category[Robotics],~RRPrtReq]:FOR[zRationalResources]
// {
	// RRPrtReq = Full
	// %MODULE[WBIPrinterRequirements] {}
	// PRINT_RESOURCE
	// {
		// name = RRKitActuators
		// rate = 1
	// }
	// PRINT_RESOURCE
	// {
		// name = RRKitElectronics
		// rate = 0.6
	// }
	// PRINT_RESOURCE
	// {
		// name = RRKitMicroprocessors
		// rate = 0.1
	// }
// }

// Any engine
// @PART:HAS[#category[Engine],~RRPrtReq]:FOR[zRationalResources]
// {
	// RRPrtReq = Full
	// %MODULE[WBIPrinterRequirements] {}
	// PRINT_RESOURCE
	// {
		// name = RRKitActuators
		// rate = 1.5
	// }
	// PRINT_RESOURCE
	// {
		// name = RRKitElectronics
		// rate = 0.4
	// }
	// PRINT_RESOURCE
	// {
		// name = RRKitMicroprocessors
		// rate = 0
	// }
// }



// - - - Detect Ancillary

// Any cargo bay with doors
@PART:HAS[#category[Payload],@MODULE[ModuleAnimateGeneric],~RRPrtReq]:FOR[zRationalResources]
{
	RRPrtReq = Open
	%MODULE[WBIPrinterRequirements] {}
}

// Any intake
@PART:HAS[@MODULE[ModuleResourceIntake],~RRPrtReq]:FOR[zRationalResources]
{
	RRPrtReq = Open
	%MODULE[WBIPrinterRequirements] {}
}

// Any control surface
@PART:HAS[@MODULE[ModuleControlSurface],~RRPrtReq]:FOR[zRationalResources]
{
	RRPrtReq = Open
	%MODULE[WBIPrinterRequirements] {}
}

// Any airbrake
@PART:HAS[@MODULE[ModuleAeroSurface],~RRPrtReq]:FOR[zRationalResources]
{
	RRPrtReq = Open
	%MODULE[WBIPrinterRequirements] {}
}

// Any lamp
@PART:HAS[@MODULE[ModuleLight],~RRPrtReq]:FOR[zRationalResources]
{
	RRPrtReq = Open
	%MODULE[WBIPrinterRequirements] {}
}

// Any resource converter
@PART:HAS[@MODULE[Module*ResourceConverter],~RRPrtReq]:FOR[zRationalResources]
{
	RRPrtReq = Open
	%MODULE[WBIPrinterRequirements] {}
}
@PART:HAS[@MODULE[WBIOmniConverter],~RRPrtReq]:FOR[zRationalResources]
{
	RRPrtReq = Open
	%MODULE[WBIPrinterRequirements] {}
}

// Any resource harvester
@PART:HAS[@MODULE[Module*ResourceHarvester],~RRPrtReq]:FOR[zRationalResources]
{
	RRPrtReq = Open
	%MODULE[WBIPrinterRequirements] {}
}

// Any radiator
@PART:HAS[@MODULE[Module*Radiator],~RRPrtReq]:FOR[zRationalResources]
{
	RRPrtReq = Open
	%MODULE[WBIPrinterRequirements] {}
}

// Any solar panel
@PART:HAS[@MODULE[Module*SolarPanel],~RRPrtReq]:FOR[zRationalResources]
{
	RRPrtReq = Open
	%MODULE[WBIPrinterRequirements] {}
}



// - - - - - Load ancillary



@PART:HAS[#RRPrtReq[Open],!PRINT_RESOURCE]:FOR[zRationalResources]
{
	PRINT_RESOURCE
	{
		name = RRKitActuators
		rate = 0
	}
	PRINT_RESOURCE
	{
		name = RRKitElectronics
		rate = 0
	}
	PRINT_RESOURCE
	{
		name = RRKitMicroprocessors
		rate = 0
	}
}



// - - - Finish



// Any cargo bay with doors
@PART:HAS[#category[Payload],@MODULE[*ModuleAnimateGeneric*],#RRPrtReq[Open]]:FOR[zRationalResources]
{
	@RRPrtReq = Hemi
	@PRINT_RESOURCE[RRKitActuators]
	{
		@rate += 0.3
	}
	@PRINT_RESOURCE[RRKitElectronics]
	{
		@rate += 0
	}
	@PRINT_RESOURCE[RRKitMicroprocessors]
	{
		@rate += 0
	}
}

// Any intake
@PART:HAS[@MODULE[ModuleResourceIntake],#RRPrtReq[Open]]:FOR[zRationalResources]
{
	@RRPrtReq = Hemi
	@PRINT_RESOURCE[RRKitActuators]
	{
		@rate += 1.5
	}
	@PRINT_RESOURCE[RRKitElectronics]
	{
		@rate += 0
	}
	@PRINT_RESOURCE[RRKitMicroprocessors]
	{
		@rate += 0
	}
}

// Any control surface
@PART:HAS[@MODULE[ModuleControlSurface],#RRPrtReq[Open]]:FOR[zRationalResources]
{
	@RRPrtReq = Hemi
	@PRINT_RESOURCE[RRKitActuators]
	{
		@rate += 0.4
	}
	@PRINT_RESOURCE[RRKitElectronics]
	{
		@rate += 0
	}
	@PRINT_RESOURCE[RRKitMicroprocessors]
	{
		@rate += 0
	}
}

// Any airbrake
@PART:HAS[@MODULE[ModuleAeroSurface],#RRPrtReq[Open]]:FOR[zRationalResources]
{
	@RRPrtReq = Hemi
	@PRINT_RESOURCE[RRKitActuators]
	{
		@rate += 0.4
	}
	@PRINT_RESOURCE[RRKitElectronics]
	{
		@rate += 0
	}
	@PRINT_RESOURCE[RRKitMicroprocessors]
	{
		@rate += 0
	}
}

// Any lamp
@PART:HAS[@MODULE[ModuleLight],#RRPrtReq[Open]]:FOR[zRationalResources]
{
	@RRPrtReq = Hemi
	@PRINT_RESOURCE[RRKitActuators]
	{
		@rate += 0
	}
	@PRINT_RESOURCE[RRKitElectronics]
	{
		@rate += 0.5
	}
	@PRINT_RESOURCE[RRKitMicroprocessors]
	{
		@rate += 0
	}
}

// Any resource converter
@PART:HAS[@MODULE[Module*ResourceConverter],#RRPrtReq[Open]]:FOR[zRationalResources]
{
	@RRPrtReq = Hemi
	@PRINT_RESOURCE[RRKitActuators]
	{
		@rate += 0.4
	}
	@PRINT_RESOURCE[RRKitElectronics]
	{
		@rate += 0.8
	}
	@PRINT_RESOURCE[RRKitMicroprocessors]
	{
		@rate += 0.2
	}
}
@PART:HAS[@MODULE[WBIOmniConverter],#RRPrtReq[Open]]:FOR[zRationalResources]
{
	@RRPrtReq = Hemi
	@PRINT_RESOURCE[RRKitActuators]
	{
		@rate += 0.4
	}
	@PRINT_RESOURCE[RRKitElectronics]
	{
		@rate += 0.8
	}
	@PRINT_RESOURCE[RRKitMicroprocessors]
	{
		@rate += 0.1
	}
}

// Any resource harvester
@PART:HAS[@MODULE[Module*ResourceHarvester],#RRPrtReq[Open]]:FOR[zRationalResources]
{
	@RRPrtReq = Hemi
	@PRINT_RESOURCE[RRKitActuators]
	{
		@rate += 0.8
	}
	@PRINT_RESOURCE[RRKitElectronics]
	{
		@rate += 0.4
	}
	@PRINT_RESOURCE[RRKitMicroprocessors]
	{
		@rate += 0.1
	}
}

// Any radiator
@PART:HAS[@MODULE[Module*Radiator],#RRPrtReq[Open]]:FOR[zRationalResources]
{
	@RRPrtReq = Hemi
	@PRINT_RESOURCE[RRKitActuators]
	{
		@rate += 0.4
	}
	@PRINT_RESOURCE[RRKitElectronics]
	{
		@rate += 0.2
	}
	@PRINT_RESOURCE[RRKitMicroprocessors]
	{
		@rate += 0
	}
}

// Any solar panel
@PART:HAS[@MODULE[Module*SolarPanel],#RRPrtReq[Open]]:FOR[zRationalResources]
{
	@RRPrtReq = Hemi
	@PRINT_RESOURCE[RRKitActuators]
	{
		@rate += 0.4
	}
	@PRINT_RESOURCE[RRKitElectronics]
	{
		@rate += 0.2
	}
	@PRINT_RESOURCE[RRKitMicroprocessors]
	{
		@rate += 0.25
	}
}



// - - - Cleanup



@PART:HAS[#RRPrtReq]:FOR[zRationalResources]
{
	!PRINT_RESOURCE[RRKitActuators]:HAS[#rate[0]] {}
	!PRINT_RESOURCE[RRKitElectronics]:HAS[#rate[0]] {}
	!PRINT_RESOURCE[RRKitMicroprocessors]:HAS[#rate[0]] {}
}