@PART:HAS[#RRNF[Yes],@MODULE[ModuleEnginesFX]]:NEEDS[ClassicStock,!CommunityResourcePack]:FOR[RationalResourcesNuclearFamily]
{
	@description ^= :$: <br><#fc5a50>RR all-option NTR.</color> // Dark Magenta
	@RRNF = Joined
	@tags ^= :$: cck-rr
	
	IspVac = #$MODULE[ModuleEnginesFX],0/atmosphereCurve/key,0[1, ]$ // get vac Isp number
	IspASL = #$MODULE[ModuleEnginesFX],0/atmosphereCurve/key,1[1, ]$ // get ASL Isp number
	Isp3rd = #$MODULE[ModuleEnginesFX],0/atmosphereCurve/key,2[1, ]$
	IspMult = #$IspVac$ // set numerator for div operation
	@IspMult /= 800 // denominator, the highest vac Isp number among all targeted parts
	
	// precision sequence to keep div number at 2dp and not let it be 12+dp
	@IspMult += 0.005
	@IspMult *= 100
	@IspMult = #$IspMult[0,.]$ // regex truncate, unknown behavior but used in RO
	@IspMult /= 100
	
	// get thrust ASL
	ThrustSLFraction = #$IspASL$
	@ThrustSLFraction /= #$IspVac$
	@ThrustSLFraction += 0.005
	@ThrustSLFraction *= 100
	@ThrustSLFraction = #$ThrustSLFraction[0,.]$ // regex truncate, unknown behavior but used in RO
	@ThrustSLFraction /= 100
	
	IspVacPLM = 800
	IspASLPLM = #$IspVacPLM$ // take vac Isp
	@IspASLPLM *= #$ThrustSLFraction$ // get SL Isp through SL thrust fraction
	@IspVacPLM *= #$IspMult$ // scale Isp against default
	@IspASLPLM *= #$IspMult$ // scale Isp against default
	Isp3rdPLM = #$Isp3rd$
	@Isp3rdPLM *= 1 // 800 / 800 (scale 3rd Isp key's value by this fuel / LPLM Isp)
	ThrustVacPLM = #$MODULE[ModuleEnginesFX],0/maxThrust$
	@ThrustVacPLM *= 1 // scale thrust against first mode's maxThrust
	ThrustASLPLM = #$ThrustVacPLM$ // get scaled vac thrust
	@ThrustASLPLM *= #$ThrustSLFraction$ // get scaled SL thrust
	
	IspVacRPT = 606
	IspASLRPT = #$IspVacRPT$
	@IspASLRPT *= #$ThrustSLFraction$
	@IspVacRPT *= #$IspMult$
	@IspASLRPT *= #$IspMult$
	Isp3rdRPT = #$Isp3rd$
	@Isp3rdRPT *= 0.758 // 606 / 800
	ThrustVacRPT = #$MODULE[ModuleEnginesFX],1/maxThrust$
	@ThrustVacRPT *= 1.23
	ThrustASLRPT = #$ThrustVacRPT$
	@ThrustASLRPT *= #$ThrustSLFraction$
	
	IspVacN2 = 253
	IspASLN2 = #$IspVacN2$
	@IspASLN2 *= #$ThrustSLFraction$
	@IspVacN2 *= #$IspMult$
	@IspASLN2 *= #$IspMult$
	Isp3rdN2 = #$Isp3rd$
	@Isp3rdN2 *= 0.326 // 261 / 800
	ThrustVacN2 = #$MODULE[ModuleEnginesFX],1/maxThrust$
	@ThrustVacN2 *= 2.37
	ThrustASLN2 = #$ThrustVacN2$
	@ThrustASLN2 *= #$ThrustSLFraction$
	
	IspVacH2O = 370
	IspASLH2O = #$IspVacH2O$
	@IspASLH2O *= #$ThrustSLFraction$
	@IspVacH2O *= #$IspMult$
	@IspASLH2O *= #$IspMult$
	Isp3rdH2O = #$Isp3rd$
	@Isp3rdH2O *= 0.463 // 370 / 800
	ThrustVacH2O = #$MODULE[ModuleEnginesFX],0/maxThrust$
	@ThrustVacH2O *= 1.78
	ThrustASLH2O = #$ThrustVacH2O$
	@ThrustASLH2O *= #$ThrustSLFraction$
	
	IspVacCO2 = 283
	IspASLCO2 = #$IspVacCO2$ // take vac Isp
	@IspASLCO2 *= #$ThrustSLFraction$ // get SL Isp through SL thrust fraction
	@IspVacCO2 *= #$IspMult$ // scale Isp against default
	@IspASLCO2 *= #$IspMult$ // scale Isp against default
	Isp3rdCO2 = #$Isp3rd$
	@Isp3rdCO2 *= 0.354 // 283 / 800 (scale 3rd Isp key's value by this fuel / LH2 Isp)
	ThrustVacCO2 = #$MODULE[ModuleEnginesFX],0/maxThrust$
	@ThrustVacCO2 *= 2.18 // scale thrust against first mode's maxThrust
	ThrustASLCO2 = #$ThrustVacCO2$ // get scaled vac thrust
	@ThrustASLCO2 *= #$ThrustSLFraction$ // get scaled SL thrust
	
	%nucPwrScale = #$MODULE[ModuleEnginesFX],0/maxThrust$
	@nucPwrScale /= 130
	%nucFuelScale = #$mass$
	@nucFuelScale /= 1.8
	
	@nucPwrScale += 0.005
	@nucPwrScale *= 100
	@nucPwrScale = #$nucPwrScale[0,.]$ // regex truncate, unknown behavior but used in RO
	@nucPwrScale /= 100
	
	@nucFuelScale += 0.005
	@nucFuelScale *= 100
	@nucFuelScale = #$nucFuelScale[0,.]$ // regex truncate, unknown behavior but used in RO
	@nucFuelScale /= 100
	
	%RESOURCE[NuclearFuel]
	{
		%amount = 5
		@amount *= #$/nucFuelScale$
		%maxAmount = 5
		@maxAmount *= #$/nucFuelScale$
	}
	%RESOURCE[NuclearWaste]
	{
		%amount = 0
		%maxAmount = 5
		@maxAmount *= #$/nucFuelScale$
	}
	%RESOURCE[ThermalPower]
	{
		%amount = 400
		@amount *= #$/nucFuelScale$
		%maxAmount = 600
		@maxAmount *= #$/nucFuelScale$
	}
	%RESOURCE[ElectricCharge]
	{
		%amount = 100
		@amount *= #$/nucFuelScale$
		%maxAmount = 100
		@maxAmount *= #$/nucFuelScale$
	}
	
	!MODULE[ModuleAlternator],* {}
	MODULE:NEEDS[!SystemHeat]
	{
		name = ModuleResourceConverter
		ConverterName = RR Fission Reactor
		StartActionName = Start RR Fission Reactor
		StopActionName = Stop RR Fission Reactor
		ToggleActionName = Toggle RR Fission Reactor
		GeneratesHeat = True
		UseSpecialistBonus = False
		AutoShutdown = True
		DefaultShutoffTemp = 0.675
		TemperatureModifier
		{
			key = 0 8000 0 0
			key = 600 24000 0 0
			key = 1000 12000
			key = 1400 0
		}
		@TemperatureModifier
		{
			@key,0[1, ] *= #$/nucPwrScale$
			@key,1[1, ] *= #$/nucPwrScale$
			@key,2[1, ] *= #$/nucPwrScale$
		}
		ThermalEfficiency
		{
			key = 400 0.01 0 0
			key = 1000 1 0 0
			key = 1350 0 -0.008 0
		}
		INPUT_RESOURCE
		{
			ResourceName = NuclearFuel
			Ratio = 0.00000141278
			@Ratio *= #$/nucPwrScale$
		}
		OUTPUT_RESOURCE
		{
			ResourceName = NuclearWaste
			Ratio = 0.00000141278
			@Ratio *= #$/nucPwrScale$
		}
		OUTPUT_RESOURCE
		{
			ResourceName = ThermalPower
			Ratio = 600
			@Ratio *= #$/nucPwrScale$
			DumpExcess = False
		}
	}
	MODULE:NEEDS[!SystemHeat]
	{
		name = ModuleResourceConverter
		ConverterName = RR TEC
		StartActionName = Start RR TEC
		StopActionName = Stop RR TEC
		ToggleActionName = Toggle RR TEC
		IsActivated = true
		INPUT_RESOURCE
		{
			ResourceName = ThermalPower
			Ratio = 0.06
			@Ratio *= #$/nucPwrScale$
			@Ratio *= #$@RRNF_Param/TECMultiplier$
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 30
			@Ratio *= #$/nucPwrScale$
			@Ratio *= #$@RRNF_Param/TECMultiplier$
			FlowMode = ALL_VESSEL
		}
	}
	
	@MODULE[MultiModeEngine]
	{
		@primaryEngineID = PLM
		%primaryEngineModeDisplayName = RR_RedAgent
		@secondaryEngineID = LOxAugmented
		%secondaryEngineModeDisplayName = LOx_Augmented
	}
	@MODULE[ModuleEnginesFX],0
	{
		%engineID = PLM
		@PROPELLANT,0
		{
			@name = Propellium
			@ratio = 1
			%DrawGauge = True
			%resourceFlowMode = STAGE_PRIORITY_FLOW
		}
		PROPELLANT
		{
			name = ThermalPower
			ratio = 9.2574
			@ratio *= #$/IspMult$
			DrawGauge = True
			ignoreForIsp = True
			resourceFlowMode = STAGE_PRIORITY_FLOW
		}
		@atmosphereCurve
		{
			@key,0[1, ] = #$/IspVacPLM$
			@key,1[1, ] = #$/IspASLPLM$
			@key,2[1, ] = #$/Isp3rdPLM$
		}
	}
	MODULE
	{
		name = ModuleB9PartSwitch
		moduleID = Propellant
		switcherDescription = Propellant
		switcherDescriptionPlural = Propellant Options
		switchInFlight = True
		SUBTYPE
		{
			name = Propellium
			title = Propellium
			primaryColor = ResourceColorLqdHydrogen
			secondaryColor = ResourceColorLqdHydrogen
			descriptionSummary = The engine consumes <color="yellow">Propellium</color>.<br>This is the highest efficiency, baseline option for NTRs.
			descriptionDetail = #<b>Thrust:</b> $/ThrustASLPLM$ / $/ThrustVacPLM$ kN.<br><b>Isp:</b> $/IspASLPLM$ / $/IspVacPLM$ s.
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleEnginesFX
					engineID = PLM
				}
				DATA
				{
					maxThrust = #$/ThrustVacPLM$
					PROPELLANT
					{
						name = Propellium
						ratio = 1
						DrawGauge = True
						resourceFlowMode = STAGE_PRIORITY_FLOW
					}
					PROPELLANT
					{
						name = ThermalPower
						ratio = 9.2574
						@ratio *= #$/IspMult$
						DrawGauge = True
						ignoreForIsp = True
						resourceFlowMode = STAGE_PRIORITY_FLOW
					}
					#/MODULE[ModuleEnginesFX]/atmosphereCurve {}
					@atmosphereCurve
					{
						@key,0[1, ] = #$/IspVacPLM$
						@key,1[1, ] = #$/IspASLPLM$
						@key,2[1, ] = #$/Isp3rdPLM$
					}
				}
			}
		}
		SUBTYPE
		{
			name = Raptium
			title = Raptium
			primaryColor = PurpleyPink
			secondaryColor = PurpleyPink
			descriptionSummary = The engine consumes <color="yellow">Raptium</color>.<br>This option trades a very modest portion of efficiency for thrust but makes use of the highly demanded alternative propellant for launchers and boosters.
			descriptionDetail = #<b>Thrust:</b> <color="yellow">$/ThrustASLRPT$ / $/ThrustVacRPT$</color> kN.<br><b>Isp:</b> <color="yellow">$/IspASLRPT$ / $/IspVacRPT$</color> s.
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleEnginesFX
					engineID = PLM
				}
				DATA
				{
					maxThrust = #$/ThrustVacRPT$
					PROPELLANT
					{
						name = Raptium
						ratio = 1
						DrawGauge = True
						resourceFlowMode = STAGE_PRIORITY_FLOW
					}
					PROPELLANT
					{
						name = ThermalPower
						ratio = 34.2727
						@ratio *= #$/IspMult$
						DrawGauge = True
						ignoreForIsp = True
						resourceFlowMode = STAGE_PRIORITY_FLOW
					}
					#/MODULE[ModuleEnginesFX]/atmosphereCurve {}
					@atmosphereCurve
					{
						@key,0[1, ] = #$/IspVacRPT$
						@key,1[1, ] = #$/IspASLRPT$
						@key,2[1, ] = #$/Isp3rdRPT$
					}
				}
			}
		}
		SUBTYPE
		{
			name = Water
			title = Water
			primaryColor = Ocean
			secondaryColor = Ocean
			descriptionSummary = The engine consumes <color="yellow">Water</color>.<br>This is the more economical high thrust option, immediately superior in performance to the likes of the LV-303 and LV-909 LFO engines. 
			descriptionDetail = #<b>Thrust:</b> <color="yellow">$/ThrustASLH2O$ / $/ThrustVacH2O$</color> kN.<br><b>Isp:</b> <color="yellow">$/IspASLH2O$ / $/IspVacH2O$</color> s.
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleEnginesFX
					engineID = PLM
				}
				DATA
				{
					maxThrust = #$/ThrustVacH2O$
					PROPELLANT
					{
						name = Water
						ratio = 1
						DrawGauge = True
						resourceFlowMode = STAGE_PRIORITY_FLOW
					}
					PROPELLANT
					{
						name = ThermalPower
						ratio = 14.4598
						@ratio *= #$/IspMult$
						DrawGauge = True
						ignoreForIsp = True
						resourceFlowMode = STAGE_PRIORITY_FLOW
					}
					#/MODULE[ModuleEnginesFX]/atmosphereCurve {}
					@atmosphereCurve
					{
						@key,0[1, ] = #$/IspVacH2O$
						@key,1[1, ] = #$/IspASLH2O$
						@key,2[1, ] = #$/Isp3rdH2O$
					}
				}
			}
		}
		SUBTYPE:NEEDS[SnacksFreshAir]
		{
			name = FreshAir
			title = Fresh Air
			primaryColor = CadetBlue
			secondaryColor = CadetBlue
			descriptionSummary = The engine consumes <color="yellow">FreshAir</color>.<br>This option is on the weirder and desperate side but whatever works... Pray that it's never needed.
			descriptionDetail = #<b>Thrust:</b> <color="yellow">$/ThrustASLN2$ / $/ThrustVacN2$</color> kN.<br><b>Isp:</b> <color="yellow">$/IspASLN2$ / $/IspVacN2$</color> s.
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleEnginesFX
					engineID = PLM
				}
				DATA
				{
					maxThrust = #$/ThrustVacN2$
					PROPELLANT
					{
						name = FreshAir
						ratio = 1
						DrawGauge = True
						resourceFlowMode = STAGE_PRIORITY_FLOW
					}
					#/MODULE[ModuleEnginesFX]/atmosphereCurve {}
					@atmosphereCurve
					{
						@key,0[1, ] = #$/IspVacN2$
						@key,1[1, ] = #$/IspASLN2$
						@key,2[1, ] = #$/Isp3rdN2$
					}
				}
			}
		}
		SUBTYPE
		{
			name = CompressedAtmosphere
			title = Compressed Atmosphere
			primaryColor = WarmGrey
			secondaryColor = WarmGrey
			descriptionSummary = The engine consumes <color="yellow">CompressedAtmosphere</color>.<br>CompressedAtmosphere as a propellant may be very poor in terms of Isp, but any atmosphere is fuel, and that's always good.
			descriptionDetail = #<b>Thrust:</b> <color="yellow">$/ThrustASLCO2$ / $/ThrustVacCO2$</color> kN.<br><b>Isp:</b> <color="yellow">$/IspASLCO2$ / $/IspVacCO2$</color> s.
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleEnginesFX
					engineID = PLM
				}
				DATA
				{
					maxThrust = #$/ThrustVacCO2$
					PROPELLANT
					{
						name = CompressedAtmosphere
						ratio = 1
						DrawGauge = True
						resourceFlowMode = STAGE_PRIORITY_FLOW
					}
					PROPELLANT
					{
						name = ThermalPower
						ratio = 21.2177
						@ratio *= #$/IspMult$
						DrawGauge = True
						ignoreForIsp = True
						resourceFlowMode = STAGE_PRIORITY_FLOW
					}
					#/MODULE[ModuleEnginesFX]/atmosphereCurve {}
					@atmosphereCurve
					{
						@key,0[1, ] = #$/IspVacCO2$
						@key,1[1, ] = #$/IspASLCO2$
						@key,2[1, ] = #$/Isp3rdCO2$
					}
				}
			}
		}
		SUBTYPE:NEEDS[SnacksFreshAir]
		{
			name = StaleAir
			title = Stale Air
			primaryColor = WarmGrey
			secondaryColor = WarmGrey
			descriptionSummary = The engine consumes <color="yellow">StaleAir</color>...<br> Stale Air, right?
			descriptionDetail = #<b>Thrust:</b> $/ThrustASLCO2$ / $/ThrustVacCO2$ kN.<br><b>Isp:</b> $/IspASLCO2$ / $/IspVacCO2$s.
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleEnginesFX
					engineID = PLM
				}
				DATA
				{
					maxThrust = #$/ThrustVacCO2$
					PROPELLANT
					{
						name = StaleAir
						ratio = 1
						DrawGauge = True
						resourceFlowMode = STAGE_PRIORITY_FLOW
					}
					#/MODULE[ModuleEnginesFX]/atmosphereCurve {}
					@atmosphereCurve
					{
						@key,0[1, ] = #$/IspVacCO2$
						@key,1[1, ] = #$/IspASLCO2$
						@key,2[1, ] = #$/Isp3rdCO2$
					}
				}
			}
		}
	}
	
	MODULE:NEEDS[!SystemHeat]
	{
		name = ModuleOverheatDisplay
	}
	MODULE:NEEDS[!SystemHeat]
	{
		name = ModuleCoreHeat
		CoreTempGoal = 1000					//Internal temp goal - we don't transfer till we hit this point
		CoreToPartRatio = 0.1				//Scale back cooling if the part is this % of core temp
		CoreTempGoalAdjustment = 0			//Dynamic goal adjustment
		CoreEnergyMultiplier = 0.1			//What percentage of our core energy do we transfer to the part
		HeatRadiantMultiplier = 0.05		//If the core is hotter, how much heat radiates?
		CoolingRadiantMultiplier = 0		//If the core is colder, how much radiates?
		HeatTransferMultiplier = 0			//If the part is hotter, how much heat transfers in?
		CoolantTransferMultiplier = 0.01	//If the part is colder, how much of our energy can we transfer?
		radiatorCoolingFactor = 1			//How much energy we pull from core with an active radiator?  >= 1
		radiatorHeatingFactor = 0.05		//How much energy we push to the active radiator
		MaxCalculationWarp = 1000			//Based on how dramatic the changes are, this is the max rate of change
		CoreShutdownTemp = 1350				//At what core temperature do we shut down all generators on this part?
		MaxCoolant = 480					//Maximum amount of radiator capacity we can consume - 50 = 1 small
		@MaxCoolant *= #$/nucPwrScale$
	}
	
	%MODULE[Emitter]:NEEDS[FeatureRadiation] // Kerbalism radioactivity
	{
		%radiation = 0.0000277775 // 0.1 rad/h
		@radiation *= #$/mass$
		@radiation /= 3 // stock NERVA ref mass
		Tag = RR
	}
}

@PART:HAS[#RRNF[Joined],@MODULE[ModuleEnginesFX],@MODULE[MultiModeEngine]]:NEEDS[ClassicStock,!CommunityResourcePack]:FOR[RationalResourcesNuclearFamily]
{
	@MODULE[ModuleEnginesFX],1
	{
		%engineID = LOxAugmented
		@PROPELLANT,0
		{
			@name = Propellium
			@ratio = 3
			%DrawGauge = True
			%resourceFlowMode = STAGE_PRIORITY_FLOW
		}
		@PROPELLANT[Oxidizer]
		{
			@ratio = 1
			%DrawGauge = True
			%resourceFlowMode = STAGE_PRIORITY_FLOW
		}
		PROPELLANT
		{
			name = ThermalPower
			ratio = 79.2638 // assume 150% thrust at 75% Isp
			@ratio *= #$/IspMult$
			DrawGauge = True
			ignoreForIsp = True
			resourceFlowMode = STAGE_PRIORITY_FLOW
		}
		@atmosphereCurve
		{
			@key,*[1, ] *= 1.2
		}
	}
}



// - - - - - - System Heat


// Single mode
@PART:HAS[#RRNF[Joined],@MODULE[ModuleEnginesFX],!MODULE[MultiModeEngine]]:NEEDS[SystemHeat,ClassicStock,!CommunityResourcePack]:FOR[RationalResourcesNuclearFamily]
{
	@MODULE[ModuleEnginesFX]
	{
		@heatProduction = 0
	}
	!MODULE[ModuleSystemHeatEngine],* {}
	MODULE
	{
		name = ModuleSystemHeat
		volume = #$/mass$
		@volume != 0.75
		moduleID = RREngine
		iconName = Icon_Nuclear
		ignoreTemperature = true
	}
	MODULE
	{
		name = ModuleSystemHeatConverter
		ConverterName = RR Fission Reactor
		StartActionName = Start RR Fission Reactor
		StopActionName = Stop RR Fission Reactor
		ToggleActionName = Toggle RR Fission Reactor
		FillAmount = 1
		AutoShutdown = False
		GeneratesHeat = False
		UseSpecialistBonus = False
		moduleID = RRFission
		systemHeatModuleID = RREngine
		shutdownTemperature = 1300
		systemOutletTemperature = 1100
		systemPower = 240
		@systemPower *= #$/nucPwrScale$
		systemEfficiency
		{
			key = 0 1
			key = 1 1
		}
		INPUT_RESOURCE
		{
			ResourceName = NuclearFuel
			Ratio = 0.00000141278
			@Ratio *= #$/nucPwrScale$
		}
		OUTPUT_RESOURCE
		{
			ResourceName = NuclearWaste
			Ratio = 0.00000141278
			@Ratio *= #$/nucPwrScale$
		}
		OUTPUT_RESOURCE
		{
			ResourceName = ThermalPower
			Ratio = 600
			@Ratio *= #$/nucPwrScale$
			DumpExcess = False
		}
	}
	MODULE
	{
		name = ModuleSystemHeatConverter
		ConverterName = RR TEC
		StartActionName = Start RR TEC
		StopActionName = Stop RR TEC
		ToggleActionName = Toggle RR TEC
		IsActivated = true
		FillAmount = 1
		AutoShutdown = False
		GeneratesHeat = False
		UseSpecialistBonus = False
		moduleID = RRTEC
		systemHeatModuleID = RREngine
		shutdownTemperature = 1300
		systemOutletTemperature = 1100
		systemPower = 30
		@systemPower *= #$/nucPwrScale$
		systemEfficiency
		{
			key = 0 1
			key = 1 1
		}
		INPUT_RESOURCE
		{
			ResourceName = ThermalPower
			Ratio = 0.06
			@Ratio *= #$/nucPwrScale$
			@Ratio *= #$@RRNF_Param/TECMultiplier$
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 30
			@Ratio *= #$/nucPwrScale$
			@Ratio *= #$@RRNF_Param/TECMultiplier$
			FlowMode = ALL_VESSEL
		}
	}
	MODULE
	{
		name = ModuleSystemHeatEngine
		moduleID = engine1
		systemHeatModuleID = RREngine
		engineModuleID = #$/MODULE[ModuleEnginesFX]/engineID$
		systemPower = 200
		@systemPower *= #$/nucPwrScale$
		systemOutletTemperature = 1100
		shutdownTemperature = 1300
		temperatureCurve
		{
			key = 0 1
			key = 1100 1
		}
	}
}

// Dual mode
@PART:HAS[#RRNF[Joined],@MODULE[ModuleEnginesFX],@MODULE[MultiModeEngine]]:NEEDS[SystemHeat,ClassicStock,!CommunityResourcePack]:FOR[RationalResourcesNuclearFamily]
{
	@MODULE[ModuleEnginesFX],*
	{
		@heatProduction = 0
	}
	!MODULE[ModuleSystemHeatEngine],* {}
	MODULE
	{
		name = ModuleSystemHeat
		volume = #$/mass$
		@volume != 0.75
		moduleID = RREngine
		iconName = Icon_Nuclear
		ignoreTemperature = true
	}
	MODULE
	{
		name = ModuleSystemHeatConverter
		ConverterName = RR Fission Reactor
		StartActionName = Start RR Fission Reactor
		StopActionName = Stop RR Fission Reactor
		ToggleActionName = Toggle RR Fission Reactor
		FillAmount = 1
		AutoShutdown = False
		GeneratesHeat = False
		UseSpecialistBonus = False
		moduleID = RRFission
		systemHeatModuleID = RREngine
		shutdownTemperature = 1300
		systemOutletTemperature = 1100
		systemPower = 240
		@systemPower *= #$/nucPwrScale$
		systemEfficiency
		{
			key = 0 1
			key = 1 1
		}
		INPUT_RESOURCE
		{
			ResourceName = NuclearFuel
			Ratio = 0.00000141278
			@Ratio *= #$/nucPwrScale$
		}
		OUTPUT_RESOURCE
		{
			ResourceName = NuclearWaste
			Ratio = 0.00000141278
			@Ratio *= #$/nucPwrScale$
		}
		OUTPUT_RESOURCE
		{
			ResourceName = ThermalPower
			Ratio = 600
			@Ratio *= #$/nucPwrScale$
			DumpExcess = False
		}
	}
	MODULE
	{
		name = ModuleSystemHeatConverter
		ConverterName = RR TEC
		StartActionName = Start RR TEC
		StopActionName = Stop RR TEC
		ToggleActionName = Toggle RR TEC
		IsActivated = true
		FillAmount = 1
		AutoShutdown = False
		GeneratesHeat = False
		UseSpecialistBonus = False
		moduleID = RRTEC
		systemHeatModuleID = RREngine
		shutdownTemperature = 1300
		systemOutletTemperature = 1100
		systemPower = 30
		@systemPower *= #$/nucPwrScale$
		systemEfficiency
		{
			key = 0 1
			key = 1 1
		}
		INPUT_RESOURCE
		{
			ResourceName = ThermalPower
			Ratio = 0.06
			@Ratio *= #$/nucPwrScale$
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 30
			@Ratio *= #$/nucPwrScale$
			FlowMode = ALL_VESSEL
		}
	}
	
	ThrustModeDiff = #$/MODULE[ModuleEnginesFX],1/maxThrust$
	@ThrustModeDiff /= #$/MODULE[ModuleEnginesFX],0/maxThrust$
	MODULE
	{
		name = ModuleSystemHeatEngine
		moduleID = engine1
		systemHeatModuleID = RREngine
		engineModuleID = #$/MODULE[ModuleEnginesFX],0/engineID$
		systemPower = 200
		@systemPower *= #$/nucPwrScale$
		systemOutletTemperature = 1100
		shutdownTemperature = 1300
		temperatureCurve
		{
			key = 0 1
			key = 1100 1
		}
	}
	MODULE
	{
		name = ModuleSystemHeatEngine
		moduleID = engine2
		systemHeatModuleID = RREngine
		engineModuleID = #$/MODULE[ModuleEnginesFX],1/engineID$
		systemPower = 200
		@systemPower *= #$/nucPwrScale$
		@systemPower *= #$/ThrustModeDiff$
		systemOutletTemperature = 1100
		shutdownTemperature = 1300
		temperatureCurve
		{
			key = 0 1
			key = 1100 1
		}
	}
}


// clean-up
@PART:HAS[#RRNF[Joined]]:AFTER[RationalResourcesNuclearFamily]
{
	!nuc* = nope
	!Isp* = nope
	!Thrust* = nope
	!nuc* = nope
}