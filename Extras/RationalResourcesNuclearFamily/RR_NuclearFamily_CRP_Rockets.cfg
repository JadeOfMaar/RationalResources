// Process the parts that have opted in.
// Clone them for Oxidating agents, change the tag value to prevent loops, apply features.
// Look for the Nuclear Family engines in the CCK category for Rational Resources.

// Alter the parts themselves for Reducing agents, change the tag value to prevent loops, apply features.
@PART:HAS[#RRNF[Yes],@MODULE[ModuleEnginesFX]]:NEEDS[CommunityResourcePack,!ClassicStock]:FOR[RationalResourcesNuclearFamily]
{
	@description ^= :$: <br><#fc5a50>RR all option NTR.</color> // Dark Magenta
	@RRNF = Joined
	@tags ^= :$: cck-rr
	
	IspVac = #$MODULE[ModuleEnginesFX],0/atmosphereCurve/key,0[1, ]$ // get vac Isp number
	IspASL = #$MODULE[ModuleEnginesFX],0/atmosphereCurve/key,1[1, ]$ // get ASL Isp number
	Isp3rd = #$MODULE[ModuleEnginesFX],0/atmosphereCurve/key,2[1, ]$
	IspMult = #$IspVac$ // set numerator for div operation
	@IspMult /= 800 // denominator, the highest vac Isp number among all targeted parts
	
	// precision sequence to keep div number at 2dp and not let it be 12+dp
	@IspMult += 0.005
	@IspMult *= 100
	@IspMult = #$IspMult[0,.]$ // regex truncate, unknown behavior but used in RO
	@IspMult /= 100
	
	// get thrust ASL
	ThrustSLFraction = #$IspASL$
	@ThrustSLFraction /= #$IspVac$
	@ThrustSLFraction += 0.005
	@ThrustSLFraction *= 100
	@ThrustSLFraction = #$ThrustSLFraction[0,.]$ // regex truncate, unknown behavior but used in RO
	@ThrustSLFraction /= 100
	
	IspVacH2 = 800
	IspASLH2 = #$IspVacH2$ // take vac Isp
	@IspASLH2 *= #$ThrustSLFraction$ // get SL Isp through SL thrust fraction
	@IspVacH2 *= #$IspMult$ // scale Isp against default
	@IspASLH2 *= #$IspMult$ // scale Isp against default
	Isp3rdH2 = #$Isp3rd$
	@Isp3rdH2 *= 1 // 800 / 800 (scale 3rd Isp key's value by this fuel / LH2 Isp)
	ThrustVacH2 = #$MODULE[ModuleEnginesFX],0/maxThrust$
	@ThrustVacH2 *= 1 // scale thrust against first mode's maxThrust
	ThrustASLH2 = #$ThrustVacH2$ // get scaled vac thrust
	@ThrustASLH2 *= #$ThrustSLFraction$ // get scaled SL thrust
	
	IspVacCO = 253
	IspASLCO = #$IspVacCO$ // take vac Isp
	@IspASLCO *= #$ThrustSLFraction$ // get SL Isp through SL thrust fraction
	@IspVacCO *= #$IspMult$ // scale Isp against default
	@IspASLCO *= #$IspMult$ // scale Isp against default
	Isp3rdCO = #$Isp3rd$
	@Isp3rdCO *= 0.316 // 253 / 800 (scale 3rd Isp key's value by this fuel / LH2 Isp)
	ThrustVacCO = #$MODULE[ModuleEnginesFX],0/maxThrust$
	@ThrustVacCO *= 2.37 // scale thrust against first mode's maxThrust
	ThrustASLCO = #$ThrustVacCO$ // get scaled vac thrust
	@ThrustASLCO *= #$ThrustSLFraction$ // get scaled SL thrust
	
	IspVacNH3 = 400
	IspASLNH3 = #$IspVacNH3$
	@IspASLNH3 *= #$ThrustSLFraction$
	@IspVacNH3 *= #$IspMult$
	@IspASLNH3 *= #$IspMult$
	Isp3rdNH3 = #$Isp3rd$
	@Isp3rdNH3 *= 0.5 // 400 / 800
	ThrustVacNH3 = #$MODULE[ModuleEnginesFX],0/maxThrust$
	@ThrustVacNH3 *= 1.68
	ThrustASLNH3 = #$ThrustVacNH3$
	@ThrustASLNH3 *= #$ThrustSLFraction$
	
	IspVacN2 = 253
	IspASLN2 = #$IspVacN2$
	@IspASLN2 *= #$ThrustSLFraction$
	@IspVacN2 *= #$IspMult$
	@IspASLN2 *= #$IspMult$
	Isp3rdN2 = #$Isp3rd$
	@Isp3rdN2 *= 0.326 // 261 / 800
	ThrustVacN2 = #$MODULE[ModuleEnginesFX],0/maxThrust$
	@ThrustVacN2 *= 2.37
	ThrustASLN2 = #$ThrustVacN2$
	@ThrustASLN2 *= #$ThrustSLFraction$
	
	IspVacCH4 = 606
	IspASLCH4 = #$IspVacCH4$
	@IspASLCH4 *= #$ThrustSLFraction$
	@IspVacCH4 *= #$IspMult$
	@IspASLCH4 *= #$IspMult$
	Isp3rdCH4 = #$Isp3rd$
	@Isp3rdCH4 *= 0.758 // 606 / 800
	ThrustVacCH4 = #$MODULE[ModuleEnginesFX],0/maxThrust$
	@ThrustVacCH4 *= 1.23
	ThrustASLCH4 = #$ThrustVacCH4$
	@ThrustASLCH4 *= #$ThrustSLFraction$
	
	IspVacCO2 = 283
	IspASLCO2 = #$IspVacCO2$ // take vac Isp
	@IspASLCO2 *= #$ThrustSLFraction$ // get SL Isp through SL thrust fraction
	@IspVacCO2 *= #$IspMult$ // scale Isp against default
	@IspASLCO2 *= #$IspMult$ // scale Isp against default
	Isp3rdCO2 = #$Isp3rd$
	@Isp3rdCO2 *= 0.354 // 283 / 800 (scale 3rd Isp key's value by this fuel / LH2 Isp)
	ThrustVacCO2 = #$MODULE[ModuleEnginesFX],0/maxThrust$
	@ThrustVacCO2 *= 2.18 // scale thrust against first mode's maxThrust
	ThrustASLCO2 = #$ThrustVacCO2$ // get scaled vac thrust
	@ThrustASLCO2 *= #$ThrustSLFraction$ // get scaled SL thrust
	
	IspVacH2O = 370
	IspASLH2O = #$IspVacH2O$
	@IspASLH2O *= #$ThrustSLFraction$
	@IspVacH2O *= #$IspMult$
	@IspASLH2O *= #$IspMult$
	Isp3rdH2O = #$Isp3rd$
	@Isp3rdH2O *= 0.463 // 370 / 800
	ThrustVacH2O = #$MODULE[ModuleEnginesFX],0/maxThrust$
	@ThrustVacH2O *= 1.78
	ThrustASLH2O = #$ThrustVacH2O$
	@ThrustASLH2O *= #$ThrustSLFraction$
	
	%nucPwrScale = #$MODULE[ModuleEnginesFX],0/maxThrust$
	@nucPwrScale /= 130
	%nucFuelScale = #$mass$
	@nucFuelScale /= 1.8
	
	@nucPwrScale += 0.005
	@nucPwrScale *= 100
	@nucPwrScale = #$nucPwrScale[0,.]$ // regex truncate, unknown behavior but used in RO
	@nucPwrScale /= 100
	
	@nucFuelScale += 0.005
	@nucFuelScale *= 100
	@nucFuelScale = #$nucFuelScale[0,.]$ // regex truncate, unknown behavior but used in RO
	@nucFuelScale /= 100
	
	%RESOURCE[EnrichedUranium]
	{
		%amount = 5
		@amount *= #$/nucFuelScale$
		%maxAmount = 5
		@maxAmount *= #$/nucFuelScale$
	}
	%RESOURCE[DepletedFuel]
	{
		%amount = 0
		%maxAmount = 5
		@maxAmount *= #$/nucFuelScale$
	}
	%RESOURCE[ThermalPower]
	{
		%amount = 400
		@amount *= #$/nucFuelScale$
		%maxAmount = 600
		@maxAmount *= #$/nucFuelScale$
	}
	%RESOURCE[ElectricCharge]
	{
		%amount = 100
		@amount *= #$/nucFuelScale$
		%maxAmount = 100
		@maxAmount *= #$/nucFuelScale$
	}
	
	!MODULE[ModuleAlternator],* {}
	MODULE:NEEDS[!SystemHeat]
	{
		name = ModuleResourceConverter
		ConverterName = RR Fission Reactor
		StartActionName = Start RR Fission Reactor
		StopActionName = Stop RR Fission Reactor
		ToggleActionName = Toggle RR Fission Reactor
		GeneratesHeat = True
		UseSpecialistBonus = False
		AutoShutdown = True
		DefaultShutoffTemp = 0.675
		TemperatureModifier
		{
			key = 0 8000 0 0
			key = 600 24000 0 0
			key = 1000 12000
			key = 1400 0
		}
		@TemperatureModifier
		{
			@key,0[1, ] *= #$/nucPwrScale$
			@key,1[1, ] *= #$/nucPwrScale$
			@key,2[1, ] *= #$/nucPwrScale$
		}
		ThermalEfficiency 
		{
			key = 400 0.01 0 0
			key = 1000 1 0 0
			key = 1350 0 -0.008 0
		}
		INPUT_RESOURCE
		{
			ResourceName = EnrichedUranium
			Ratio = 0.00000141278
			@Ratio *= #$/nucPwrScale$
		}
		OUTPUT_RESOURCE
		{
			ResourceName = DepletedFuel
			Ratio = 0.00000141278
			@Ratio *= #$/nucPwrScale$
		}
		OUTPUT_RESOURCE
		{
			ResourceName = ThermalPower
			Ratio = 600
			@Ratio *= #$/nucPwrScale$
			DumpExcess = False
		}
	}
	MODULE:NEEDS[!SystemHeat]
	{
		name = ModuleResourceConverter
		ConverterName = RR TEC
		StartActionName = Start RR TEC
		StopActionName = Stop RR TEC
		ToggleActionName = Toggle RR TEC
		IsActivated = true
		INPUT_RESOURCE
		{
			ResourceName = ThermalPower
			Ratio = 0.06
			@Ratio *= #$/nucPwrScale$
			@Ratio *= #$@RRNF_Param/TECMultiplier$
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 30
			@Ratio *= #$/nucPwrScale$
			@Ratio *= #$@RRNF_Param/TECMultiplier$
			FlowMode = ALL_VESSEL
		}
	}
	
	@MODULE[MultiModeEngine]
	{
		@primaryEngineID = LH2
		%primaryEngineModeDisplayName = RR_RedAgent
		@secondaryEngineID = LOxAugmented
		%secondaryEngineModeDisplayName = LOx_Augmented
	}
	@MODULE[ModuleEnginesFX],0
	{
		@heatProduction:NEEDS[SystemHeat] = 0
		%engineID = LH2
		@PROPELLANT,0
		{
			@name = LqdHydrogen
			@ratio = 1
			%DrawGauge = True
			%resourceFlowMode = STAGE_PRIORITY_FLOW
		}
		PROPELLANT:NEEDS[!SystemHeat]
		{
			name = ThermalPower
			ratio = 1.8527
			@ratio *= #$/IspMult$
			DrawGauge = True
			ignoreForIsp = True
			resourceFlowMode = STAGE_PRIORITY_FLOW
		}
		@atmosphereCurve
		{
			@key,0[1, ] = #$/IspVacH2$
			@key,1[1, ] = #$/IspASLH2$
			@key,2[1, ] = #$/Isp3rdH2$
		}
	}
	MODULE
	{
		name = ModuleB9PartSwitch
		moduleID = Propellant
		switcherDescription = Propellant
		switcherDescriptionPlural = Propellant Options
		switchInFlight = True
		SUBTYPE
		{
			name = Hydrogen
			title = Liquid Hydrogen
			primaryColor = ResourceColorLqdHydrogen
			secondaryColor = ResourceColorLqdHydrogen
			descriptionSummary = The engine consumes <color="yellow">LqdHydrogen</color>.<br>This is the highest efficiency, baseline option for NTRs.
			descriptionDetail = #<b>Thrust:</b> $/ThrustASLH2$ / $/ThrustVacH2$ kN.<br><b>Isp:</b> $/IspASLH2$ / $/IspVacH2$ s.
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleEnginesFX
					engineID = LH2
				}
				DATA
				{
					maxThrust = #$/ThrustVacH2$
					PROPELLANT
					{
						name = LqdHydrogen
						ratio = 1
						DrawGauge = True
						resourceFlowMode = STAGE_PRIORITY_FLOW
					}
					PROPELLANT:NEEDS[!SystemHeat]
					{
						name = ThermalPower
						ratio = 1.8527
						@ratio *= #$/IspMult$
						ignoreForIsp = True
						DrawGauge = True
						resourceFlowMode = STAGE_PRIORITY_FLOW
					}
					#/MODULE[ModuleEnginesFX]/atmosphereCurve {}
					@atmosphereCurve
					{
						@key,0[1, ] = #$/IspVacH2$
						@key,1[1, ] = #$/IspASLH2$
						@key,2[1, ] = #$/Isp3rdH2$
					}
				}
			}
		}
		SUBTYPE
		{
			name = Ammonia
			title = Liquid Ammonia
			primaryColor = BurntRed
			secondaryColor = BurntRed
			descriptionSummary = The engine consumes <color="yellow">LqdAmmonia</color>.<br>This may be very niche but is made very available, the Ammonia option trades exactly half the baseline efficiency for double the thrust.
			descriptionDetail = #<b>Thrust:</b> <color="yellow">$/ThrustASLNH3$ / $/ThrustVacNH3$</color> kN.<br><b>Isp:</b> <color="yellow">$/IspASLNH3$ / $/IspVacNH3$</color> s.
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleEnginesFX
					engineID = LH2
				}
				DATA
				{
					maxThrust = #$/ThrustVacNH3$
					PROPELLANT
					{
						name = LqdAmmonia
						ratio = 1
						DrawGauge = True
						resourceFlowMode = STAGE_PRIORITY_FLOW
					}
					PROPELLANT:NEEDS[!SystemHeat]
					{
						name = ThermalPower
						ratio = 5.4644
						@ratio *= #$/IspMult$
						ignoreForIsp = True
						DrawGauge = True
						resourceFlowMode = STAGE_PRIORITY_FLOW
					}
					#/MODULE[ModuleEnginesFX]/atmosphereCurve {}
					@atmosphereCurve
					{
						@key,0[1, ] = #$/IspVacNH3$
						@key,1[1, ] = #$/IspASLNH3$
						@key,2[1, ] = #$/Isp3rdNH3$
					}
				}
			}
		}
		SUBTYPE
		{
			name = CarbonD
			title = Liquid Carbon Dioxide
			primaryColor = WarmGrey
			secondaryColor = WarmGrey
			descriptionSummary = The engine consumes <color="yellow">LqdCO2</color>.<br> Impulse is as good as the average LiquidFuel rocket, and this is the most convenient option due to the great abundance of Carbon Dioxide in some planets' atmospheres.
			descriptionDetail = #<b>Thrust:</b> $/ThrustASLCO2$ / $/ThrustVacCO2$ kN.<br><b>Isp:</b> $/IspASLCO2$ / $/IspVacCO2$ s.
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleEnginesFX
					engineID = LH2
				}
				DATA
				{
					maxThrust = #$/ThrustVacCO2$
					PROPELLANT
					{
						name = LqdCO2
						ratio = 1
						DrawGauge = True
						resourceFlowMode = STAGE_PRIORITY_FLOW
					}
					PROPELLANT:NEEDS[!SystemHeat]
					{
						name = ThermalPower
						ratio = 4.9787
						@ratio *= #$/IspMult$
						ignoreForIsp = True
						DrawGauge = True
						resourceFlowMode = STAGE_PRIORITY_FLOW
					}
					#/MODULE[ModuleEnginesFX]/atmosphereCurve {}
					@atmosphereCurve
					{
						@key,0[1, ] = #$/IspVacCO2$
						@key,1[1, ] = #$/IspASLCO2$
						@key,2[1, ] = #$/Isp3rdCO2$
					}
				}
			}
		}
		SUBTYPE
		{
			name = CarbonM
			title = Liquid Carbon Monoxide
			primaryColor = PurpleGrey
			secondaryColor = PurpleGrey
			descriptionSummary = The engine consumes <color="yellow">LqdCO</color>.<br>This is the highest thrust option among all RR NTR options and is fitting for use at inner rocky worlds with atmospheres.
			descriptionDetail = #<b>Thrust:</b> <color="yellow">$/ThrustASLCO$ / $/ThrustVacCO$</color> kN.<br><b>Isp:</b> <color="yellow">$/IspASLCO$ / $/IspVacCO$</color> s.
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleEnginesFX
					engineID = LH2
				}
				DATA
				{
					maxThrust = #$/ThrustVacCO$
					PROPELLANT
					{
						name = LqdCO
						ratio = 1
						DrawGauge = True
						resourceFlowMode = STAGE_PRIORITY_FLOW
					}
					PROPELLANT:NEEDS[!SystemHeat]
					{
						name = ThermalPower
						ratio = 2.7567
						@ratio *= #$/IspMult$
						ignoreForIsp = True
						DrawGauge = True
						resourceFlowMode = STAGE_PRIORITY_FLOW
					}
					#/MODULE[ModuleEnginesFX]/atmosphereCurve {}
					@atmosphereCurve
					{
						@key,0[1, ] = #$/IspVacCO$
						@key,1[1, ] = #$/IspASLCO$
						@key,2[1, ] = #$/Isp3rdCO$
					}
				}
			}
		}
		SUBTYPE
		{
			name = Methane
			title = Liquid Methane
			primaryColor = ResourceColorLqdMethane
			secondaryColor = ResourceColorLqdMethane
			descriptionSummary = The engine consumes <color="yellow">LqdMethane</color>.<br>This option trades a very modest portion of efficiency for thrust but makes use of the highly demanded alternative propellant for launchers and boosters.
			descriptionDetail = #<b>Thrust:</b> <color="yellow">$/ThrustASLCH4$ / $/ThrustVacCH4$</color> kN.<br><b>Isp:</b> <color="yellow">$/IspASLCH4$ / $/IspVacCH4$</color> s.
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleEnginesFX
					engineID = LH2
				}
				DATA
				{
					maxThrust = #$/ThrustVacCH4$
					PROPELLANT
					{
						name = LqdMethane
						ratio = 1
						DrawGauge = True
						resourceFlowMode = STAGE_PRIORITY_FLOW
					}
					PROPELLANT:NEEDS[!SystemHeat]
					{
						name = ThermalPower
						ratio = 6.8545
						@ratio *= #$/IspMult$
						ignoreForIsp = True
						DrawGauge = True
						resourceFlowMode = STAGE_PRIORITY_FLOW
					}
					#/MODULE[ModuleEnginesFX]/atmosphereCurve {}
					@atmosphereCurve
					{
						@key,0[1, ] = #$/IspVacCH4$
						@key,1[1, ] = #$/IspASLCH4$
						@key,2[1, ] = #$/Isp3rdCH4$
					}
				}
			}
		}
		SUBTYPE
		{
			name = Nitrogen
			title = Liquid Nitrogen
			primaryColor = PeacockBlue
			secondaryColor = PeacockBlue
			descriptionSummary = The engine consumes <color="yellow">LqdNitrogen</color>.<br>Nitrogen as a propellant may be very niche and is poor in terms of Isp, but it is common in planetary crusts, atmospheres, oceans, and exospheres.
			descriptionDetail = #<b>Thrust:</b> <color="yellow">$/ThrustASLN2$ / $/ThrustVacN2$</color> kN.<br><b>Isp:</b> <color="yellow">$/IspASLN2$ / $/IspVacN2$</color> s.
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleEnginesFX
					engineID = LH2
				}
				DATA
				{
					maxThrust = #$/ThrustVacN2$
					PROPELLANT
					{
						name = LqdNitrogen
						ratio = 1
						DrawGauge = True
						resourceFlowMode = STAGE_PRIORITY_FLOW
					}
					PROPELLANT:NEEDS[!SystemHeat]
					{
						name = ThermalPower
						ratio = 2.8785
						@ratio *= #$/IspMult$
						ignoreForIsp = True
						DrawGauge = True
						resourceFlowMode = STAGE_PRIORITY_FLOW
					}
					#/MODULE[ModuleEnginesFX]/atmosphereCurve {}
					@atmosphereCurve
					{
						@key,0[1, ] = #$/IspVacN2$
						@key,1[1, ] = #$/IspASLN2$
						@key,2[1, ] = #$/Isp3rdN2$
					}
				}
			}
		}
		SUBTYPE
		{
			name = Water
			title = Water
			primaryColor = Ocean
			secondaryColor = Ocean
			descriptionSummary = The engine consumes <color="yellow">Water</color>.<br>This is the more economical high thrust option, immediately superior in performance to the likes of the LV-303 and LV-909 LFO engines. 
			descriptionDetail = #<b>Thrust:</b> <color="yellow">$/ThrustASLH2O$ / $/ThrustVacH2O$</color> kN.<br><b>Isp:</b> <color="yellow">$/IspASLH2O$ / $/IspVacH2O$</color> s.
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleEnginesFX
					engineID = LH2
				}
				DATA
				{
					maxThrust = #$/ThrustVacH2O$
					PROPELLANT
					{
						name = Water
						ratio = 1
						DrawGauge = True
						resourceFlowMode = STAGE_PRIORITY_FLOW
					}
					PROPELLANT:NEEDS[!SystemHeat]
					{
						name = ThermalPower
						ratio = 6.7948
						@ratio *= #$/IspMult$
						ignoreForIsp = True
						DrawGauge = True
						resourceFlowMode = STAGE_PRIORITY_FLOW
					}
					#/MODULE[ModuleEnginesFX]/atmosphereCurve {}
					@atmosphereCurve
					{
						@key,0[1, ] = #$/IspVacH2O$
						@key,1[1, ] = #$/IspASLH2O$
						@key,2[1, ] = #$/Isp3rdH2O$
					}
				}
			}
		}
	}
	MODULE:NEEDS[!SystemHeat]
	{
		name = ModuleOverheatDisplay
	}
	MODULE:NEEDS[!SystemHeat]
	{
		name = ModuleCoreHeat
		CoreTempGoal = 1000					//Internal temp goal - we don't transfer till we hit this point
		CoreToPartRatio = 0.1				//Scale back cooling if the part is this % of core temp
		CoreTempGoalAdjustment = 0			//Dynamic goal adjustment
		CoreEnergyMultiplier = 0.1			//What percentage of our core energy do we transfer to the part
		HeatRadiantMultiplier = 0.05		//If the core is hotter, how much heat radiates?
		CoolingRadiantMultiplier = 0		//If the core is colder, how much radiates?
		HeatTransferMultiplier = 0			//If the part is hotter, how much heat transfers in?
		CoolantTransferMultiplier = 0.01	//If the part is colder, how much of our energy can we transfer?
		radiatorCoolingFactor = 1			//How much energy we pull from core with an active radiator?  >= 1
		radiatorHeatingFactor = 0.05		//How much energy we push to the active radiator
		MaxCalculationWarp = 1000			//Based on how dramatic the changes are, this is the max rate of change
		CoreShutdownTemp = 1350				//At what core temperature do we shut down all generators on this part?
		MaxCoolant = 480					//Maximum amount of radiator capacity we can consume - 50 = 1 small
		@MaxCoolant *= #$/nucPwrScale$
	}
}


@PART:HAS[#RRNF[Joined],@MODULE[ModuleEnginesFX],@MODULE[MultiModeEngine]]:NEEDS[CommunityResourcePack,!ClassicStock]:FOR[RationalResourcesNuclearFamily]
{
	@MODULE[ModuleEnginesFX],1
	{
		%engineID = LOxAugmented
		PROPELLANT:NEEDS[!SystemHeat]
		{
			name = ThermalPower
			ratio = 79.2736 // assume 150% thrust at 75% Isp
			@ratio *= #$/IspMult$
			DrawGauge = True
			ignoreForIsp = True
			resourceFlowMode = STAGE_PRIORITY_FLOW
		}
	}
}


// - - - - - - System Heat


// Single mode
@PART:HAS[#RRNF[Joined],@MODULE[ModuleEnginesFX],!MODULE[MultiModeEngine]]:NEEDS[SystemHeat,CommunityResourcePack,!ClassicStock]:FOR[RationalResourcesNuclearFamily]
{
	@MODULE[ModuleEnginesFX]
	{
		@heatProduction = 0
	}
	!MODULE[ModuleSystemHeatEngine],* {}
	MODULE
	{
		name = ModuleSystemHeat
		volume = #$/mass$
		@volume != 0.75
		moduleID = RREngine
		iconName = Icon_Nuclear
		ignoreTemperature = true
	}
	MODULE
	{
		name = ModuleSystemHeatConverter
		ConverterName = RR Fission Reactor
		StartActionName = Start RR Fission Reactor
		StopActionName = Stop RR Fission Reactor
		ToggleActionName = Toggle RR Fission Reactor
		FillAmount = 1
		AutoShutdown = False
		GeneratesHeat = False
		UseSpecialistBonus = False
		moduleID = RRFission
		systemHeatModuleID = RREngine
		shutdownTemperature = 1300
		systemOutletTemperature = 1100
		systemPower = 240
		@systemPower *= #$/nucPwrScale$
		systemEfficiency
		{
			key = 0 1
			key = 1 1
		}
		INPUT_RESOURCE
		{
			ResourceName = EnrichedUranium
			Ratio = 0.00000141278
			@Ratio *= #$/nucPwrScale$
		}
		OUTPUT_RESOURCE
		{
			ResourceName = DepletedFuel
			Ratio = 0.00000141278
			@Ratio *= #$/nucPwrScale$
		}
		OUTPUT_RESOURCE
		{
			ResourceName = ThermalPower
			Ratio = 600
			@Ratio *= #$/nucPwrScale$
			DumpExcess = False
		}
	}
	MODULE
	{
		name = ModuleSystemHeatConverter
		ConverterName = RR TEC
		StartActionName = Start RR TEC
		StopActionName = Stop RR TEC
		ToggleActionName = Toggle RR TEC
		IsActivated = true
		FillAmount = 1
		AutoShutdown = False
		GeneratesHeat = False
		UseSpecialistBonus = False
		moduleID = RRTEC
		systemHeatModuleID = RREngine
		shutdownTemperature = 1300
		systemOutletTemperature = 1100
		systemPower = 30
		@systemPower *= #$/nucPwrScale$
		systemEfficiency
		{
			key = 0 1
			key = 1 1
		}
		INPUT_RESOURCE
		{
			ResourceName = ThermalPower
			Ratio = 0.06
			@Ratio *= #$/nucPwrScale$
			@Ratio *= #$@RRNF_Param/TECMultiplier$
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 30
			@Ratio *= #$/nucPwrScale$
			@Ratio *= #$@RRNF_Param/TECMultiplier$
			FlowMode = ALL_VESSEL
		}
	}
	MODULE
	{
		name = ModuleSystemHeatEngine
		moduleID = engine1
		systemHeatModuleID = RREngine
		engineModuleID = #$/MODULE[ModuleEnginesFX]/engineID$
		systemPower = 200
		@systemPower *= #$/nucPwrScale$
		systemOutletTemperature = 1100
		shutdownTemperature = 1300
		temperatureCurve
		{
			key = 0 1
			key = 1100 1
		}
	}
}

// Dual mode
@PART:HAS[#RRNF[Joined],@MODULE[ModuleEnginesFX],@MODULE[MultiModeEngine]]:NEEDS[SystemHeat,CommunityResourcePack,!ClassicStock]:FOR[RationalResourcesNuclearFamily]
{
	@MODULE[ModuleEnginesFX],*
	{
		@heatProduction = 0
	}
	!MODULE[ModuleSystemHeatEngine],* {}
	MODULE
	{
		name = ModuleSystemHeat
		volume = #$/mass$
		@volume != 0.75
		moduleID = RREngine
		iconName = Icon_Nuclear
		ignoreTemperature = true
	}
	MODULE
	{
		name = ModuleSystemHeatConverter
		ConverterName = RR Fission Reactor
		StartActionName = Start RR Fission Reactor
		StopActionName = Stop RR Fission Reactor
		ToggleActionName = Toggle RR Fission Reactor
		FillAmount = 1
		AutoShutdown = False
		GeneratesHeat = False
		UseSpecialistBonus = False
		moduleID = RRFission
		systemHeatModuleID = RREngine
		shutdownTemperature = 1300
		systemOutletTemperature = 1100
		systemPower = 240
		@systemPower *= #$/nucPwrScale$
		systemEfficiency
		{
			key = 0 1
			key = 1 1
		}
		INPUT_RESOURCE
		{
			ResourceName = EnrichedUranium
			Ratio = 0.00000141278
			@Ratio *= #$/nucPwrScale$
		}
		OUTPUT_RESOURCE
		{
			ResourceName = DepletedFuel
			Ratio = 0.00000141278
			@Ratio *= #$/nucPwrScale$
		}
		OUTPUT_RESOURCE
		{
			ResourceName = ThermalPower
			Ratio = 600
			@Ratio *= #$/nucPwrScale$
			DumpExcess = False
		}
	}
	MODULE
	{
		name = ModuleSystemHeatConverter
		ConverterName = RR TEC
		StartActionName = Start RR TEC
		StopActionName = Stop RR TEC
		ToggleActionName = Toggle RR TEC
		IsActivated = true
		FillAmount = 1
		AutoShutdown = False
		GeneratesHeat = False
		UseSpecialistBonus = False
		moduleID = RRFission
		systemHeatModuleID = RREngine
		shutdownTemperature = 1300
		systemOutletTemperature = 1100
		systemPower = 30
		@systemPower *= #$/nucPwrScale$
		systemEfficiency
		{
			key = 0 1
			key = 1 1
		}
		INPUT_RESOURCE
		{
			ResourceName = ThermalPower
			Ratio = 0.06
			@Ratio *= #$/nucPwrScale$
			@Ratio *= #$@RRNF_Param/TECMultiplier$
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 30
			@Ratio *= #$/nucPwrScale$
			@Ratio *= #$@RRNF_Param/TECMultiplier$
			FlowMode = ALL_VESSEL
		}
	}
	
	ThrustModeDiff = #$/MODULE[ModuleEnginesFX],1/maxThrust$
	@ThrustModeDiff /= #$/MODULE[ModuleEnginesFX],0/maxThrust$
	MODULE
	{
		name = ModuleSystemHeatEngine
		moduleID = engine1
		systemHeatModuleID = RREngine
		engineModuleID = #$/MODULE[ModuleEnginesFX],0/engineID$
		systemPower = 200
		@systemPower *= #$/nucPwrScale$
		systemOutletTemperature = 900
		shutdownTemperature = 1100
		temperatureCurve
		{
			key = 0 0
			key = 180 0.002
			key = 360 0.026
			key = 540 0.13
			key = 720 0.41
			key = 900 1
		}
	}
	MODULE
	{
		name = ModuleSystemHeatEngine
		moduleID = engine2
		systemHeatModuleID = RREngine
		engineModuleID = #$/MODULE[ModuleEnginesFX],1/engineID$
		systemPower = 200
		@systemPower *= #$/nucPwrScale$
		@systemPower *= #$/ThrustModeDiff$
		systemOutletTemperature = 900
		shutdownTemperature = 1100
		temperatureCurve
		{
			key = 0 0
			key = 180 0.002
			key = 360 0.026
			key = 540 0.13
			key = 720 0.41
			key = 900 1
		}
	}
}


// - - - - - Clean-up


@PART:HAS[#RRNF[Joined]]:AFTER[RationalResourcesNuclearFamily]
{
	!Isp* = nope
	!Thrust* = nope
	!nuc* = nope
}